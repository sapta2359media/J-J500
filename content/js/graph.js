/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 26.0, "minX": 0.0, "maxY": 9855.0, "series": [{"data": [[0.0, 146.0], [0.1, 146.0], [0.2, 147.0], [0.3, 147.0], [0.4, 214.0], [0.5, 214.0], [0.6, 214.0], [0.7, 222.0], [0.8, 230.0], [0.9, 230.0], [1.0, 240.0], [1.1, 240.0], [1.2, 241.0], [1.3, 241.0], [1.4, 243.0], [1.5, 243.0], [1.6, 247.0], [1.7, 247.0], [1.8, 248.0], [1.9, 248.0], [2.0, 250.0], [2.1, 250.0], [2.2, 251.0], [2.3, 251.0], [2.4, 262.0], [2.5, 262.0], [2.6, 267.0], [2.7, 267.0], [2.8, 267.0], [2.9, 271.0], [3.0, 271.0], [3.1, 277.0], [3.2, 277.0], [3.3, 282.0], [3.4, 282.0], [3.5, 283.0], [3.6, 283.0], [3.7, 297.0], [3.8, 297.0], [3.9, 298.0], [4.0, 298.0], [4.1, 298.0], [4.2, 298.0], [4.3, 300.0], [4.4, 300.0], [4.5, 315.0], [4.6, 315.0], [4.7, 323.0], [4.8, 323.0], [4.9, 323.0], [5.0, 323.0], [5.1, 327.0], [5.2, 327.0], [5.3, 335.0], [5.4, 335.0], [5.5, 350.0], [5.6, 350.0], [5.7, 380.0], [5.8, 380.0], [5.9, 388.0], [6.0, 388.0], [6.1, 390.0], [6.2, 390.0], [6.3, 399.0], [6.4, 399.0], [6.5, 436.0], [6.6, 436.0], [6.7, 436.0], [6.8, 436.0], [6.9, 437.0], [7.0, 437.0], [7.1, 444.0], [7.2, 444.0], [7.3, 467.0], [7.4, 467.0], [7.5, 473.0], [7.6, 473.0], [7.7, 484.0], [7.8, 484.0], [7.9, 486.0], [8.0, 486.0], [8.1, 487.0], [8.2, 487.0], [8.3, 493.0], [8.4, 493.0], [8.5, 501.0], [8.6, 501.0], [8.7, 502.0], [8.8, 506.0], [8.9, 506.0], [9.0, 514.0], [9.1, 514.0], [9.2, 528.0], [9.3, 528.0], [9.4, 543.0], [9.5, 543.0], [9.6, 555.0], [9.7, 555.0], [9.8, 584.0], [9.9, 584.0], [10.0, 595.0], [10.1, 595.0], [10.2, 605.0], [10.3, 605.0], [10.4, 611.0], [10.5, 611.0], [10.6, 693.0], [10.7, 693.0], [10.8, 698.0], [10.9, 698.0], [11.0, 700.0], [11.1, 700.0], [11.2, 707.0], [11.3, 707.0], [11.4, 707.0], [11.5, 707.0], [11.6, 709.0], [11.7, 709.0], [11.8, 710.0], [11.9, 710.0], [12.0, 711.0], [12.1, 711.0], [12.2, 714.0], [12.3, 714.0], [12.4, 715.0], [12.5, 715.0], [12.6, 732.0], [12.7, 732.0], [12.8, 733.0], [12.9, 733.0], [13.0, 736.0], [13.1, 736.0], [13.2, 738.0], [13.3, 738.0], [13.4, 738.0], [13.5, 738.0], [13.6, 740.0], [13.7, 740.0], [13.8, 745.0], [13.9, 745.0], [14.0, 746.0], [14.1, 746.0], [14.2, 747.0], [14.3, 747.0], [14.4, 748.0], [14.5, 748.0], [14.6, 750.0], [14.7, 750.0], [14.8, 750.0], [14.9, 750.0], [15.0, 754.0], [15.1, 754.0], [15.2, 756.0], [15.3, 756.0], [15.4, 758.0], [15.5, 758.0], [15.6, 762.0], [15.7, 762.0], [15.8, 763.0], [15.9, 763.0], [16.0, 770.0], [16.1, 770.0], [16.2, 770.0], [16.3, 770.0], [16.4, 782.0], [16.5, 782.0], [16.6, 784.0], [16.7, 784.0], [16.8, 784.0], [16.9, 784.0], [17.0, 816.0], [17.1, 816.0], [17.2, 830.0], [17.3, 830.0], [17.4, 831.0], [17.5, 831.0], [17.6, 869.0], [17.7, 869.0], [17.8, 904.0], [17.9, 904.0], [18.0, 908.0], [18.1, 908.0], [18.2, 910.0], [18.3, 910.0], [18.4, 928.0], [18.5, 928.0], [18.6, 930.0], [18.7, 930.0], [18.8, 933.0], [18.9, 933.0], [19.0, 939.0], [19.1, 939.0], [19.2, 961.0], [19.3, 961.0], [19.4, 968.0], [19.5, 968.0], [19.6, 988.0], [19.7, 988.0], [19.8, 993.0], [19.9, 993.0], [20.0, 1021.0], [20.1, 1021.0], [20.2, 1027.0], [20.3, 1027.0], [20.4, 1030.0], [20.5, 1030.0], [20.6, 1039.0], [20.7, 1039.0], [20.8, 1048.0], [20.9, 1048.0], [21.0, 1070.0], [21.1, 1070.0], [21.2, 1087.0], [21.3, 1087.0], [21.4, 1089.0], [21.5, 1089.0], [21.6, 1135.0], [21.7, 1135.0], [21.8, 1176.0], [21.9, 1176.0], [22.0, 1179.0], [22.1, 1179.0], [22.2, 1228.0], [22.3, 1228.0], [22.4, 1243.0], [22.5, 1243.0], [22.6, 1249.0], [22.7, 1249.0], [22.8, 1257.0], [22.9, 1257.0], [23.0, 1259.0], [23.1, 1259.0], [23.2, 1270.0], [23.3, 1270.0], [23.4, 1277.0], [23.5, 1277.0], [23.6, 1285.0], [23.7, 1285.0], [23.8, 1295.0], [23.9, 1295.0], [24.0, 1297.0], [24.1, 1297.0], [24.2, 1304.0], [24.3, 1304.0], [24.4, 1450.0], [24.5, 1450.0], [24.6, 1457.0], [24.7, 1457.0], [24.8, 1494.0], [24.9, 1494.0], [25.0, 1502.0], [25.1, 1502.0], [25.2, 1517.0], [25.3, 1517.0], [25.4, 1526.0], [25.5, 1526.0], [25.6, 1535.0], [25.7, 1535.0], [25.8, 1546.0], [25.9, 1546.0], [26.0, 1548.0], [26.1, 1548.0], [26.2, 1549.0], [26.3, 1549.0], [26.4, 1556.0], [26.5, 1556.0], [26.6, 1579.0], [26.7, 1579.0], [26.8, 1581.0], [26.9, 1581.0], [27.0, 1596.0], [27.1, 1596.0], [27.2, 1606.0], [27.3, 1606.0], [27.4, 1662.0], [27.5, 1662.0], [27.6, 1706.0], [27.7, 1706.0], [27.8, 1710.0], [27.9, 1710.0], [28.0, 1771.0], [28.1, 1771.0], [28.2, 1778.0], [28.3, 1778.0], [28.4, 1810.0], [28.5, 1810.0], [28.6, 1827.0], [28.7, 1827.0], [28.8, 1832.0], [28.9, 1832.0], [29.0, 1842.0], [29.1, 1842.0], [29.2, 1853.0], [29.3, 1853.0], [29.4, 1865.0], [29.5, 1865.0], [29.6, 1873.0], [29.7, 1873.0], [29.8, 1873.0], [29.9, 1873.0], [30.0, 1878.0], [30.1, 1878.0], [30.2, 1887.0], [30.3, 1887.0], [30.4, 1908.0], [30.5, 1908.0], [30.6, 1913.0], [30.7, 1913.0], [30.8, 1920.0], [30.9, 1920.0], [31.0, 1925.0], [31.1, 1925.0], [31.2, 1947.0], [31.3, 1947.0], [31.4, 1949.0], [31.5, 1949.0], [31.6, 1955.0], [31.7, 1955.0], [31.8, 1961.0], [31.9, 1961.0], [32.0, 1962.0], [32.1, 1962.0], [32.2, 1983.0], [32.3, 1983.0], [32.4, 1989.0], [32.5, 1989.0], [32.6, 1989.0], [32.7, 1989.0], [32.8, 1990.0], [32.9, 1990.0], [33.0, 1991.0], [33.1, 1991.0], [33.2, 1993.0], [33.3, 1993.0], [33.4, 2006.0], [33.5, 2006.0], [33.6, 2009.0], [33.7, 2009.0], [33.8, 2012.0], [33.9, 2012.0], [34.0, 2013.0], [34.1, 2013.0], [34.2, 2026.0], [34.3, 2026.0], [34.4, 2026.0], [34.5, 2026.0], [34.6, 2033.0], [34.7, 2033.0], [34.8, 2033.0], [34.9, 2033.0], [35.0, 2035.0], [35.1, 2035.0], [35.2, 2035.0], [35.3, 2035.0], [35.4, 2036.0], [35.5, 2036.0], [35.6, 2038.0], [35.7, 2038.0], [35.8, 2039.0], [35.9, 2039.0], [36.0, 2039.0], [36.1, 2039.0], [36.2, 2042.0], [36.3, 2042.0], [36.4, 2045.0], [36.5, 2045.0], [36.6, 2050.0], [36.7, 2050.0], [36.8, 2079.0], [36.9, 2079.0], [37.0, 2084.0], [37.1, 2084.0], [37.2, 2085.0], [37.3, 2085.0], [37.4, 2088.0], [37.5, 2088.0], [37.6, 2088.0], [37.7, 2088.0], [37.8, 2089.0], [37.9, 2089.0], [38.0, 2090.0], [38.1, 2090.0], [38.2, 2097.0], [38.3, 2097.0], [38.4, 2097.0], [38.5, 2097.0], [38.6, 2103.0], [38.7, 2103.0], [38.8, 2108.0], [38.9, 2108.0], [39.0, 2108.0], [39.1, 2108.0], [39.2, 2111.0], [39.3, 2111.0], [39.4, 2112.0], [39.5, 2112.0], [39.6, 2119.0], [39.7, 2119.0], [39.8, 2124.0], [39.9, 2124.0], [40.0, 2125.0], [40.1, 2125.0], [40.2, 2129.0], [40.3, 2129.0], [40.4, 2135.0], [40.5, 2135.0], [40.6, 2140.0], [40.7, 2140.0], [40.8, 2141.0], [40.9, 2141.0], [41.0, 2145.0], [41.1, 2145.0], [41.2, 2147.0], [41.3, 2147.0], [41.4, 2149.0], [41.5, 2149.0], [41.6, 2151.0], [41.7, 2151.0], [41.8, 2151.0], [41.9, 2154.0], [42.0, 2154.0], [42.1, 2155.0], [42.2, 2155.0], [42.3, 2155.0], [42.4, 2155.0], [42.5, 2156.0], [42.6, 2156.0], [42.7, 2156.0], [42.8, 2156.0], [42.9, 2171.0], [43.0, 2171.0], [43.1, 2176.0], [43.2, 2176.0], [43.3, 2198.0], [43.4, 2198.0], [43.5, 2210.0], [43.6, 2210.0], [43.7, 2223.0], [43.8, 2223.0], [43.9, 2224.0], [44.0, 2224.0], [44.1, 2224.0], [44.2, 2224.0], [44.3, 2225.0], [44.4, 2225.0], [44.5, 2228.0], [44.6, 2228.0], [44.7, 2230.0], [44.8, 2230.0], [44.9, 2230.0], [45.0, 2230.0], [45.1, 2233.0], [45.2, 2233.0], [45.3, 2242.0], [45.4, 2242.0], [45.5, 2250.0], [45.6, 2250.0], [45.7, 2251.0], [45.8, 2251.0], [45.9, 2257.0], [46.0, 2257.0], [46.1, 2258.0], [46.2, 2258.0], [46.3, 2272.0], [46.4, 2272.0], [46.5, 2277.0], [46.6, 2277.0], [46.7, 2279.0], [46.8, 2279.0], [46.9, 2287.0], [47.0, 2287.0], [47.1, 2289.0], [47.2, 2289.0], [47.3, 2301.0], [47.4, 2301.0], [47.5, 2314.0], [47.6, 2314.0], [47.7, 2324.0], [47.8, 2324.0], [47.9, 2326.0], [48.0, 2326.0], [48.1, 2329.0], [48.2, 2329.0], [48.3, 2356.0], [48.4, 2356.0], [48.5, 2358.0], [48.6, 2358.0], [48.7, 2359.0], [48.8, 2359.0], [48.9, 2364.0], [49.0, 2364.0], [49.1, 2370.0], [49.2, 2370.0], [49.3, 2389.0], [49.4, 2389.0], [49.5, 2390.0], [49.6, 2390.0], [49.7, 2390.0], [49.8, 2390.0], [49.9, 2399.0], [50.0, 2399.0], [50.1, 2401.0], [50.2, 2401.0], [50.3, 2405.0], [50.4, 2405.0], [50.5, 2413.0], [50.6, 2413.0], [50.7, 2421.0], [50.8, 2421.0], [50.9, 2422.0], [51.0, 2422.0], [51.1, 2427.0], [51.2, 2427.0], [51.3, 2439.0], [51.4, 2439.0], [51.5, 2457.0], [51.6, 2457.0], [51.7, 2472.0], [51.8, 2472.0], [51.9, 2474.0], [52.0, 2474.0], [52.1, 2481.0], [52.2, 2481.0], [52.3, 2489.0], [52.4, 2489.0], [52.5, 2501.0], [52.6, 2501.0], [52.7, 2514.0], [52.8, 2514.0], [52.9, 2523.0], [53.0, 2523.0], [53.1, 2542.0], [53.2, 2542.0], [53.3, 2549.0], [53.4, 2549.0], [53.5, 2565.0], [53.6, 2565.0], [53.7, 2572.0], [53.8, 2572.0], [53.9, 2589.0], [54.0, 2589.0], [54.1, 2592.0], [54.2, 2592.0], [54.3, 2597.0], [54.4, 2597.0], [54.5, 2599.0], [54.6, 2599.0], [54.7, 2601.0], [54.8, 2601.0], [54.9, 2605.0], [55.0, 2605.0], [55.1, 2608.0], [55.2, 2608.0], [55.3, 2618.0], [55.4, 2618.0], [55.5, 2627.0], [55.6, 2627.0], [55.7, 2630.0], [55.8, 2630.0], [55.9, 2630.0], [56.0, 2630.0], [56.1, 2644.0], [56.2, 2644.0], [56.3, 2648.0], [56.4, 2648.0], [56.5, 2661.0], [56.6, 2661.0], [56.7, 2662.0], [56.8, 2662.0], [56.9, 2666.0], [57.0, 2666.0], [57.1, 2672.0], [57.2, 2672.0], [57.3, 2682.0], [57.4, 2682.0], [57.5, 2686.0], [57.6, 2686.0], [57.7, 2688.0], [57.8, 2688.0], [57.9, 2691.0], [58.0, 2691.0], [58.1, 2694.0], [58.2, 2694.0], [58.3, 2698.0], [58.4, 2698.0], [58.5, 2698.0], [58.6, 2698.0], [58.7, 2701.0], [58.8, 2701.0], [58.9, 2702.0], [59.0, 2702.0], [59.1, 2714.0], [59.2, 2714.0], [59.3, 2722.0], [59.4, 2722.0], [59.5, 2743.0], [59.6, 2743.0], [59.7, 2743.0], [59.8, 2743.0], [59.9, 2750.0], [60.0, 2750.0], [60.1, 2757.0], [60.2, 2757.0], [60.3, 2759.0], [60.4, 2759.0], [60.5, 2771.0], [60.6, 2771.0], [60.7, 2791.0], [60.8, 2791.0], [60.9, 2810.0], [61.0, 2810.0], [61.1, 2816.0], [61.2, 2816.0], [61.3, 2819.0], [61.4, 2819.0], [61.5, 2828.0], [61.6, 2828.0], [61.7, 2839.0], [61.8, 2839.0], [61.9, 2850.0], [62.0, 2850.0], [62.1, 2863.0], [62.2, 2863.0], [62.3, 2885.0], [62.4, 2885.0], [62.5, 2889.0], [62.6, 2889.0], [62.7, 2900.0], [62.8, 2900.0], [62.9, 2903.0], [63.0, 2903.0], [63.1, 2906.0], [63.2, 2906.0], [63.3, 2909.0], [63.4, 2909.0], [63.5, 2912.0], [63.6, 2912.0], [63.7, 2916.0], [63.8, 2916.0], [63.9, 2922.0], [64.0, 2922.0], [64.1, 2934.0], [64.2, 2934.0], [64.3, 2968.0], [64.4, 2968.0], [64.5, 2979.0], [64.6, 2979.0], [64.7, 2988.0], [64.8, 2988.0], [64.9, 2999.0], [65.0, 2999.0], [65.1, 3010.0], [65.2, 3010.0], [65.3, 3011.0], [65.4, 3011.0], [65.5, 3040.0], [65.6, 3040.0], [65.7, 3045.0], [65.8, 3045.0], [65.9, 3046.0], [66.0, 3046.0], [66.1, 3047.0], [66.2, 3047.0], [66.3, 3049.0], [66.4, 3049.0], [66.5, 3061.0], [66.6, 3061.0], [66.7, 3068.0], [66.8, 3068.0], [66.9, 3070.0], [67.0, 3070.0], [67.1, 3070.0], [67.2, 3070.0], [67.3, 3087.0], [67.4, 3087.0], [67.5, 3111.0], [67.6, 3111.0], [67.7, 3124.0], [67.8, 3124.0], [67.9, 3125.0], [68.0, 3125.0], [68.1, 3127.0], [68.2, 3127.0], [68.3, 3138.0], [68.4, 3138.0], [68.5, 3147.0], [68.6, 3147.0], [68.7, 3162.0], [68.8, 3162.0], [68.9, 3175.0], [69.0, 3175.0], [69.1, 3179.0], [69.2, 3179.0], [69.3, 3208.0], [69.4, 3208.0], [69.5, 3221.0], [69.6, 3221.0], [69.7, 3229.0], [69.8, 3229.0], [69.9, 3230.0], [70.0, 3230.0], [70.1, 3257.0], [70.2, 3257.0], [70.3, 3266.0], [70.4, 3266.0], [70.5, 3267.0], [70.6, 3267.0], [70.7, 3310.0], [70.8, 3310.0], [70.9, 3315.0], [71.0, 3315.0], [71.1, 3316.0], [71.2, 3316.0], [71.3, 3320.0], [71.4, 3320.0], [71.5, 3324.0], [71.6, 3324.0], [71.7, 3340.0], [71.8, 3340.0], [71.9, 3341.0], [72.0, 3341.0], [72.1, 3350.0], [72.2, 3350.0], [72.3, 3358.0], [72.4, 3358.0], [72.5, 3362.0], [72.6, 3362.0], [72.7, 3373.0], [72.8, 3373.0], [72.9, 3395.0], [73.0, 3395.0], [73.1, 3402.0], [73.2, 3402.0], [73.3, 3406.0], [73.4, 3406.0], [73.5, 3409.0], [73.6, 3409.0], [73.7, 3411.0], [73.8, 3411.0], [73.9, 3425.0], [74.0, 3425.0], [74.1, 3425.0], [74.2, 3425.0], [74.3, 3426.0], [74.4, 3426.0], [74.5, 3427.0], [74.6, 3427.0], [74.7, 3428.0], [74.8, 3428.0], [74.9, 3435.0], [75.0, 3435.0], [75.1, 3442.0], [75.2, 3442.0], [75.3, 3444.0], [75.4, 3444.0], [75.5, 3446.0], [75.6, 3446.0], [75.7, 3449.0], [75.8, 3449.0], [75.9, 3460.0], [76.0, 3460.0], [76.1, 3467.0], [76.2, 3467.0], [76.3, 3499.0], [76.4, 3499.0], [76.5, 3502.0], [76.6, 3502.0], [76.7, 3518.0], [76.8, 3518.0], [76.9, 3527.0], [77.0, 3527.0], [77.1, 3540.0], [77.2, 3540.0], [77.3, 3549.0], [77.4, 3549.0], [77.5, 3564.0], [77.6, 3564.0], [77.7, 3565.0], [77.8, 3565.0], [77.9, 3576.0], [78.0, 3576.0], [78.1, 3591.0], [78.2, 3591.0], [78.3, 3603.0], [78.4, 3603.0], [78.5, 3671.0], [78.6, 3671.0], [78.7, 3691.0], [78.8, 3691.0], [78.9, 3693.0], [79.0, 3693.0], [79.1, 3700.0], [79.2, 3700.0], [79.3, 3717.0], [79.4, 3717.0], [79.5, 3726.0], [79.6, 3726.0], [79.7, 3784.0], [79.8, 3784.0], [79.9, 3789.0], [80.0, 3789.0], [80.1, 3804.0], [80.2, 3804.0], [80.3, 3806.0], [80.4, 3806.0], [80.5, 3817.0], [80.6, 3817.0], [80.7, 3833.0], [80.8, 3833.0], [80.9, 3839.0], [81.0, 3839.0], [81.1, 3924.0], [81.2, 3924.0], [81.3, 3953.0], [81.4, 3953.0], [81.5, 3954.0], [81.6, 3954.0], [81.7, 3956.0], [81.8, 3956.0], [81.9, 3992.0], [82.0, 3992.0], [82.1, 3992.0], [82.2, 3992.0], [82.3, 3993.0], [82.4, 3993.0], [82.5, 4005.0], [82.6, 4005.0], [82.7, 4035.0], [82.8, 4035.0], [82.9, 4044.0], [83.0, 4044.0], [83.1, 4076.0], [83.2, 4076.0], [83.3, 4077.0], [83.4, 4077.0], [83.5, 4128.0], [83.6, 4128.0], [83.7, 4133.0], [83.8, 4133.0], [83.9, 4161.0], [84.0, 4161.0], [84.1, 4164.0], [84.2, 4164.0], [84.3, 4169.0], [84.4, 4169.0], [84.5, 4183.0], [84.6, 4183.0], [84.7, 4206.0], [84.8, 4206.0], [84.9, 4221.0], [85.0, 4221.0], [85.1, 4260.0], [85.2, 4260.0], [85.3, 4274.0], [85.4, 4274.0], [85.5, 4280.0], [85.6, 4280.0], [85.7, 4286.0], [85.8, 4286.0], [85.9, 4292.0], [86.0, 4292.0], [86.1, 4351.0], [86.2, 4351.0], [86.3, 4357.0], [86.4, 4357.0], [86.5, 4363.0], [86.6, 4363.0], [86.7, 4364.0], [86.8, 4364.0], [86.9, 4403.0], [87.0, 4403.0], [87.1, 4404.0], [87.2, 4404.0], [87.3, 4410.0], [87.4, 4410.0], [87.5, 4415.0], [87.6, 4415.0], [87.7, 4418.0], [87.8, 4418.0], [87.9, 4435.0], [88.0, 4435.0], [88.1, 4465.0], [88.2, 4465.0], [88.3, 4469.0], [88.4, 4469.0], [88.5, 4481.0], [88.6, 4481.0], [88.7, 4530.0], [88.8, 4530.0], [88.9, 4533.0], [89.0, 4533.0], [89.1, 4586.0], [89.2, 4586.0], [89.3, 4637.0], [89.4, 4637.0], [89.5, 4666.0], [89.6, 4666.0], [89.7, 4683.0], [89.8, 4683.0], [89.9, 4743.0], [90.0, 4743.0], [90.1, 4761.0], [90.2, 4761.0], [90.3, 4769.0], [90.4, 4769.0], [90.5, 4785.0], [90.6, 4785.0], [90.7, 4785.0], [90.8, 4785.0], [90.9, 4792.0], [91.0, 4792.0], [91.1, 4806.0], [91.2, 4806.0], [91.3, 4861.0], [91.4, 4861.0], [91.5, 4866.0], [91.6, 4866.0], [91.7, 4887.0], [91.8, 4887.0], [91.9, 4903.0], [92.0, 4903.0], [92.1, 4935.0], [92.2, 4935.0], [92.3, 4942.0], [92.4, 4942.0], [92.5, 5014.0], [92.6, 5014.0], [92.7, 5028.0], [92.8, 5028.0], [92.9, 5093.0], [93.0, 5093.0], [93.1, 5120.0], [93.2, 5120.0], [93.3, 5130.0], [93.4, 5130.0], [93.5, 5136.0], [93.6, 5136.0], [93.7, 5151.0], [93.8, 5151.0], [93.9, 5191.0], [94.0, 5191.0], [94.1, 5222.0], [94.2, 5222.0], [94.3, 5230.0], [94.4, 5230.0], [94.5, 5259.0], [94.6, 5259.0], [94.7, 5272.0], [94.8, 5272.0], [94.9, 5277.0], [95.0, 5277.0], [95.1, 5378.0], [95.2, 5378.0], [95.3, 5396.0], [95.4, 5396.0], [95.5, 5410.0], [95.6, 5410.0], [95.7, 5418.0], [95.8, 5418.0], [95.9, 5471.0], [96.0, 5471.0], [96.1, 5479.0], [96.2, 5479.0], [96.3, 5481.0], [96.4, 5481.0], [96.5, 5517.0], [96.6, 5517.0], [96.7, 5529.0], [96.8, 5529.0], [96.9, 5542.0], [97.0, 5542.0], [97.1, 5544.0], [97.2, 5544.0], [97.3, 5565.0], [97.4, 5565.0], [97.5, 5601.0], [97.6, 5601.0], [97.7, 5647.0], [97.8, 5647.0], [97.9, 5667.0], [98.0, 5667.0], [98.1, 5718.0], [98.2, 5718.0], [98.3, 5852.0], [98.4, 5852.0], [98.5, 5907.0], [98.6, 5907.0], [98.7, 5917.0], [98.8, 5917.0], [98.9, 5969.0], [99.0, 5969.0], [99.1, 5976.0], [99.2, 5976.0], [99.3, 5988.0], [99.4, 5988.0], [99.5, 6080.0], [99.6, 6080.0], [99.7, 6422.0], [99.8, 6422.0], [99.9, 6999.0], [100.0, 6999.0]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[0.0, 26.0], [0.1, 26.0], [0.2, 27.0], [0.3, 27.0], [0.4, 28.0], [0.5, 28.0], [0.6, 28.0], [0.7, 30.0], [0.8, 30.0], [0.9, 30.0], [1.0, 30.0], [1.1, 30.0], [1.2, 30.0], [1.3, 31.0], [1.4, 31.0], [1.5, 32.0], [1.6, 32.0], [1.7, 32.0], [1.8, 32.0], [1.9, 32.0], [2.0, 34.0], [2.1, 34.0], [2.2, 34.0], [2.3, 34.0], [2.4, 34.0], [2.5, 34.0], [2.6, 35.0], [2.7, 35.0], [2.8, 35.0], [2.9, 35.0], [3.0, 35.0], [3.1, 35.0], [3.2, 35.0], [3.3, 35.0], [3.4, 35.0], [3.5, 35.0], [3.6, 36.0], [3.7, 36.0], [3.8, 36.0], [3.9, 36.0], [4.0, 36.0], [4.1, 36.0], [4.2, 36.0], [4.3, 36.0], [4.4, 36.0], [4.5, 36.0], [4.6, 36.0], [4.7, 36.0], [4.8, 36.0], [4.9, 36.0], [5.0, 36.0], [5.1, 36.0], [5.2, 37.0], [5.3, 37.0], [5.4, 37.0], [5.5, 37.0], [5.6, 37.0], [5.7, 38.0], [5.8, 38.0], [5.9, 38.0], [6.0, 38.0], [6.1, 39.0], [6.2, 39.0], [6.3, 39.0], [6.4, 39.0], [6.5, 41.0], [6.6, 41.0], [6.7, 41.0], [6.8, 41.0], [6.9, 41.0], [7.0, 41.0], [7.1, 41.0], [7.2, 41.0], [7.3, 42.0], [7.4, 42.0], [7.5, 43.0], [7.6, 43.0], [7.7, 45.0], [7.8, 45.0], [7.9, 46.0], [8.0, 46.0], [8.1, 46.0], [8.2, 46.0], [8.3, 47.0], [8.4, 47.0], [8.5, 47.0], [8.6, 47.0], [8.7, 48.0], [8.8, 49.0], [8.9, 49.0], [9.0, 49.0], [9.1, 49.0], [9.2, 49.0], [9.3, 49.0], [9.4, 50.0], [9.5, 50.0], [9.6, 50.0], [9.7, 50.0], [9.8, 51.0], [9.9, 51.0], [10.0, 51.0], [10.1, 51.0], [10.2, 51.0], [10.3, 51.0], [10.4, 51.0], [10.5, 51.0], [10.6, 51.0], [10.7, 52.0], [10.8, 52.0], [10.9, 52.0], [11.0, 52.0], [11.1, 52.0], [11.2, 52.0], [11.3, 54.0], [11.4, 54.0], [11.5, 54.0], [11.6, 54.0], [11.7, 55.0], [11.8, 55.0], [11.9, 55.0], [12.0, 55.0], [12.1, 55.0], [12.2, 55.0], [12.3, 55.0], [12.4, 55.0], [12.5, 55.0], [12.6, 55.0], [12.7, 57.0], [12.8, 57.0], [12.9, 57.0], [13.0, 57.0], [13.1, 61.0], [13.2, 61.0], [13.3, 64.0], [13.4, 66.0], [13.5, 66.0], [13.6, 69.0], [13.7, 69.0], [13.8, 74.0], [13.9, 74.0], [14.0, 75.0], [14.1, 75.0], [14.2, 76.0], [14.3, 76.0], [14.4, 76.0], [14.5, 76.0], [14.6, 77.0], [14.7, 77.0], [14.8, 78.0], [14.9, 78.0], [15.0, 80.0], [15.1, 80.0], [15.2, 81.0], [15.3, 81.0], [15.4, 82.0], [15.5, 82.0], [15.6, 82.0], [15.7, 82.0], [15.8, 83.0], [15.9, 83.0], [16.0, 84.0], [16.1, 84.0], [16.2, 84.0], [16.3, 84.0], [16.4, 87.0], [16.5, 87.0], [16.6, 88.0], [16.7, 88.0], [16.8, 90.0], [16.9, 90.0], [17.0, 90.0], [17.1, 90.0], [17.2, 92.0], [17.3, 92.0], [17.4, 93.0], [17.5, 93.0], [17.6, 93.0], [17.7, 93.0], [17.8, 93.0], [17.9, 93.0], [18.0, 93.0], [18.1, 93.0], [18.2, 94.0], [18.3, 94.0], [18.4, 94.0], [18.5, 94.0], [18.6, 99.0], [18.7, 99.0], [18.8, 99.0], [18.9, 99.0], [19.0, 100.0], [19.1, 100.0], [19.2, 100.0], [19.3, 100.0], [19.4, 100.0], [19.5, 100.0], [19.6, 100.0], [19.7, 100.0], [19.8, 100.0], [19.9, 100.0], [20.0, 102.0], [20.1, 102.0], [20.2, 102.0], [20.3, 102.0], [20.4, 103.0], [20.5, 103.0], [20.6, 103.0], [20.7, 103.0], [20.8, 104.0], [20.9, 104.0], [21.0, 104.0], [21.1, 104.0], [21.2, 104.0], [21.3, 104.0], [21.4, 105.0], [21.5, 105.0], [21.6, 105.0], [21.7, 105.0], [21.8, 106.0], [21.9, 106.0], [22.0, 108.0], [22.1, 108.0], [22.2, 110.0], [22.3, 110.0], [22.4, 114.0], [22.5, 114.0], [22.6, 117.0], [22.7, 117.0], [22.8, 123.0], [22.9, 123.0], [23.0, 127.0], [23.1, 127.0], [23.2, 127.0], [23.3, 127.0], [23.4, 127.0], [23.5, 127.0], [23.6, 127.0], [23.7, 127.0], [23.8, 127.0], [23.9, 127.0], [24.0, 128.0], [24.1, 128.0], [24.2, 128.0], [24.3, 128.0], [24.4, 129.0], [24.5, 129.0], [24.6, 130.0], [24.7, 130.0], [24.8, 131.0], [24.9, 131.0], [25.0, 132.0], [25.1, 132.0], [25.2, 134.0], [25.3, 134.0], [25.4, 135.0], [25.5, 135.0], [25.6, 135.0], [25.7, 135.0], [25.8, 135.0], [25.9, 135.0], [26.0, 136.0], [26.1, 136.0], [26.2, 136.0], [26.3, 136.0], [26.4, 136.0], [26.5, 136.0], [26.6, 136.0], [26.7, 136.0], [26.8, 137.0], [26.9, 137.0], [27.0, 137.0], [27.1, 137.0], [27.2, 137.0], [27.3, 137.0], [27.4, 137.0], [27.5, 137.0], [27.6, 137.0], [27.7, 137.0], [27.8, 138.0], [27.9, 138.0], [28.0, 138.0], [28.1, 138.0], [28.2, 138.0], [28.3, 138.0], [28.4, 138.0], [28.5, 138.0], [28.6, 138.0], [28.7, 138.0], [28.8, 138.0], [28.9, 138.0], [29.0, 139.0], [29.1, 139.0], [29.2, 139.0], [29.3, 139.0], [29.4, 139.0], [29.5, 139.0], [29.6, 140.0], [29.7, 140.0], [29.8, 140.0], [29.9, 140.0], [30.0, 140.0], [30.1, 140.0], [30.2, 140.0], [30.3, 140.0], [30.4, 140.0], [30.5, 140.0], [30.6, 140.0], [30.7, 140.0], [30.8, 140.0], [30.9, 140.0], [31.0, 140.0], [31.1, 140.0], [31.2, 140.0], [31.3, 140.0], [31.4, 141.0], [31.5, 141.0], [31.6, 141.0], [31.7, 141.0], [31.8, 141.0], [31.9, 141.0], [32.0, 141.0], [32.1, 141.0], [32.2, 141.0], [32.3, 141.0], [32.4, 142.0], [32.5, 142.0], [32.6, 142.0], [32.7, 142.0], [32.8, 142.0], [32.9, 142.0], [33.0, 142.0], [33.1, 142.0], [33.2, 142.0], [33.3, 142.0], [33.4, 142.0], [33.5, 142.0], [33.6, 142.0], [33.7, 142.0], [33.8, 142.0], [33.9, 142.0], [34.0, 142.0], [34.1, 142.0], [34.2, 142.0], [34.3, 142.0], [34.4, 143.0], [34.5, 143.0], [34.6, 143.0], [34.7, 143.0], [34.8, 144.0], [34.9, 144.0], [35.0, 144.0], [35.1, 144.0], [35.2, 145.0], [35.3, 145.0], [35.4, 145.0], [35.5, 145.0], [35.6, 145.0], [35.7, 145.0], [35.8, 145.0], [35.9, 145.0], [36.0, 145.0], [36.1, 145.0], [36.2, 145.0], [36.3, 145.0], [36.4, 147.0], [36.5, 147.0], [36.6, 148.0], [36.7, 148.0], [36.8, 148.0], [36.9, 148.0], [37.0, 148.0], [37.1, 148.0], [37.2, 150.0], [37.3, 150.0], [37.4, 155.0], [37.5, 155.0], [37.6, 156.0], [37.7, 156.0], [37.8, 157.0], [37.9, 157.0], [38.0, 157.0], [38.1, 157.0], [38.2, 158.0], [38.3, 158.0], [38.4, 159.0], [38.5, 159.0], [38.6, 160.0], [38.7, 160.0], [38.8, 160.0], [38.9, 160.0], [39.0, 160.0], [39.1, 160.0], [39.2, 161.0], [39.3, 161.0], [39.4, 162.0], [39.5, 162.0], [39.6, 162.0], [39.7, 162.0], [39.8, 162.0], [39.9, 162.0], [40.0, 163.0], [40.1, 163.0], [40.2, 163.0], [40.3, 163.0], [40.4, 163.0], [40.5, 163.0], [40.6, 164.0], [40.7, 164.0], [40.8, 164.0], [40.9, 164.0], [41.0, 164.0], [41.1, 164.0], [41.2, 164.0], [41.3, 164.0], [41.4, 164.0], [41.5, 164.0], [41.6, 166.0], [41.7, 166.0], [41.8, 166.0], [41.9, 167.0], [42.0, 167.0], [42.1, 167.0], [42.2, 168.0], [42.3, 168.0], [42.4, 168.0], [42.5, 173.0], [42.6, 173.0], [42.7, 174.0], [42.8, 174.0], [42.9, 175.0], [43.0, 175.0], [43.1, 176.0], [43.2, 176.0], [43.3, 176.0], [43.4, 176.0], [43.5, 177.0], [43.6, 177.0], [43.7, 177.0], [43.8, 177.0], [43.9, 178.0], [44.0, 178.0], [44.1, 179.0], [44.2, 179.0], [44.3, 180.0], [44.4, 180.0], [44.5, 180.0], [44.6, 180.0], [44.7, 180.0], [44.8, 180.0], [44.9, 181.0], [45.0, 181.0], [45.1, 182.0], [45.2, 182.0], [45.3, 182.0], [45.4, 182.0], [45.5, 182.0], [45.6, 182.0], [45.7, 183.0], [45.8, 183.0], [45.9, 183.0], [46.0, 183.0], [46.1, 184.0], [46.2, 184.0], [46.3, 184.0], [46.4, 184.0], [46.5, 184.0], [46.6, 184.0], [46.7, 184.0], [46.8, 184.0], [46.9, 185.0], [47.0, 185.0], [47.1, 357.0], [47.2, 357.0], [47.3, 360.0], [47.4, 360.0], [47.5, 362.0], [47.6, 362.0], [47.7, 364.0], [47.8, 364.0], [47.9, 364.0], [48.0, 364.0], [48.1, 370.0], [48.2, 370.0], [48.3, 374.0], [48.4, 374.0], [48.5, 379.0], [48.6, 379.0], [48.7, 384.0], [48.8, 384.0], [48.9, 384.0], [49.0, 384.0], [49.1, 386.0], [49.2, 386.0], [49.3, 386.0], [49.4, 386.0], [49.5, 387.0], [49.6, 387.0], [49.7, 388.0], [49.8, 388.0], [49.9, 388.0], [50.0, 388.0], [50.1, 389.0], [50.2, 389.0], [50.3, 390.0], [50.4, 390.0], [50.5, 393.0], [50.6, 393.0], [50.7, 394.0], [50.8, 394.0], [50.9, 396.0], [51.0, 396.0], [51.1, 396.0], [51.2, 396.0], [51.3, 396.0], [51.4, 396.0], [51.5, 397.0], [51.6, 397.0], [51.7, 398.0], [51.8, 398.0], [51.9, 399.0], [52.0, 399.0], [52.1, 399.0], [52.2, 399.0], [52.3, 400.0], [52.4, 400.0], [52.5, 400.0], [52.6, 400.0], [52.7, 402.0], [52.8, 402.0], [52.9, 403.0], [53.0, 403.0], [53.1, 407.0], [53.2, 407.0], [53.3, 409.0], [53.4, 409.0], [53.5, 409.0], [53.6, 409.0], [53.7, 410.0], [53.8, 410.0], [53.9, 410.0], [54.0, 410.0], [54.1, 410.0], [54.2, 410.0], [54.3, 415.0], [54.4, 415.0], [54.5, 423.0], [54.6, 423.0], [54.7, 425.0], [54.8, 425.0], [54.9, 425.0], [55.0, 425.0], [55.1, 426.0], [55.2, 426.0], [55.3, 427.0], [55.4, 427.0], [55.5, 428.0], [55.6, 428.0], [55.7, 429.0], [55.8, 429.0], [55.9, 439.0], [56.0, 439.0], [56.1, 443.0], [56.2, 443.0], [56.3, 447.0], [56.4, 447.0], [56.5, 451.0], [56.6, 451.0], [56.7, 459.0], [56.8, 459.0], [56.9, 465.0], [57.0, 465.0], [57.1, 477.0], [57.2, 477.0], [57.3, 478.0], [57.4, 478.0], [57.5, 479.0], [57.6, 479.0], [57.7, 479.0], [57.8, 479.0], [57.9, 481.0], [58.0, 481.0], [58.1, 483.0], [58.2, 483.0], [58.3, 489.0], [58.4, 489.0], [58.5, 490.0], [58.6, 490.0], [58.7, 491.0], [58.8, 491.0], [58.9, 492.0], [59.0, 492.0], [59.1, 493.0], [59.2, 493.0], [59.3, 495.0], [59.4, 495.0], [59.5, 495.0], [59.6, 495.0], [59.7, 498.0], [59.8, 498.0], [59.9, 500.0], [60.0, 500.0], [60.1, 501.0], [60.2, 501.0], [60.3, 509.0], [60.4, 509.0], [60.5, 513.0], [60.6, 513.0], [60.7, 527.0], [60.8, 527.0], [60.9, 615.0], [61.0, 615.0], [61.1, 623.0], [61.2, 623.0], [61.3, 627.0], [61.4, 627.0], [61.5, 641.0], [61.6, 641.0], [61.7, 748.0], [61.8, 748.0], [61.9, 891.0], [62.0, 891.0], [62.1, 898.0], [62.2, 898.0], [62.3, 1006.0], [62.4, 1006.0], [62.5, 1015.0], [62.6, 1015.0], [62.7, 1063.0], [62.8, 1063.0], [62.9, 1124.0], [63.0, 1124.0], [63.1, 1234.0], [63.2, 1234.0], [63.3, 1241.0], [63.4, 1241.0], [63.5, 1655.0], [63.6, 1655.0], [63.7, 1823.0], [63.8, 1823.0], [63.9, 1847.0], [64.0, 1847.0], [64.1, 1855.0], [64.2, 1855.0], [64.3, 1865.0], [64.4, 1865.0], [64.5, 1876.0], [64.6, 1876.0], [64.7, 1879.0], [64.8, 1879.0], [64.9, 1917.0], [65.0, 1917.0], [65.1, 1992.0], [65.2, 1992.0], [65.3, 1998.0], [65.4, 1998.0], [65.5, 1998.0], [65.6, 1998.0], [65.7, 2003.0], [65.8, 2003.0], [65.9, 2038.0], [66.0, 2038.0], [66.1, 2045.0], [66.2, 2045.0], [66.3, 2058.0], [66.4, 2058.0], [66.5, 2090.0], [66.6, 2090.0], [66.7, 2104.0], [66.8, 2104.0], [66.9, 2142.0], [67.0, 2142.0], [67.1, 2165.0], [67.2, 2165.0], [67.3, 2166.0], [67.4, 2166.0], [67.5, 2197.0], [67.6, 2197.0], [67.7, 2206.0], [67.8, 2206.0], [67.9, 2424.0], [68.0, 2424.0], [68.1, 2433.0], [68.2, 2433.0], [68.3, 2440.0], [68.4, 2440.0], [68.5, 2442.0], [68.6, 2442.0], [68.7, 2444.0], [68.8, 2444.0], [68.9, 2445.0], [69.0, 2445.0], [69.1, 2448.0], [69.2, 2448.0], [69.3, 2506.0], [69.4, 2506.0], [69.5, 2554.0], [69.6, 2554.0], [69.7, 2653.0], [69.8, 2653.0], [69.9, 2750.0], [70.0, 2750.0], [70.1, 2776.0], [70.2, 2776.0], [70.3, 2792.0], [70.4, 2792.0], [70.5, 2872.0], [70.6, 2872.0], [70.7, 2992.0], [70.8, 2992.0], [70.9, 3016.0], [71.0, 3016.0], [71.1, 3038.0], [71.2, 3038.0], [71.3, 3042.0], [71.4, 3042.0], [71.5, 3057.0], [71.6, 3057.0], [71.7, 3092.0], [71.8, 3092.0], [71.9, 3751.0], [72.0, 3751.0], [72.1, 3944.0], [72.2, 3944.0], [72.3, 4225.0], [72.4, 4225.0], [72.5, 4263.0], [72.6, 4263.0], [72.7, 4775.0], [72.8, 4775.0], [72.9, 4799.0], [73.0, 4799.0], [73.1, 4805.0], [73.2, 4805.0], [73.3, 4844.0], [73.4, 4844.0], [73.5, 4862.0], [73.6, 4862.0], [73.7, 4918.0], [73.8, 4918.0], [73.9, 4957.0], [74.0, 4957.0], [74.1, 5001.0], [74.2, 5001.0], [74.3, 5002.0], [74.4, 5002.0], [74.5, 5129.0], [74.6, 5129.0], [74.7, 5159.0], [74.8, 5159.0], [74.9, 5213.0], [75.0, 5213.0], [75.1, 5213.0], [75.2, 5213.0], [75.3, 5237.0], [75.4, 5237.0], [75.5, 5247.0], [75.6, 5247.0], [75.7, 5269.0], [75.8, 5269.0], [75.9, 5302.0], [76.0, 5302.0], [76.1, 5309.0], [76.2, 5309.0], [76.3, 5326.0], [76.4, 5326.0], [76.5, 5331.0], [76.6, 5331.0], [76.7, 5351.0], [76.8, 5351.0], [76.9, 5351.0], [77.0, 5351.0], [77.1, 5355.0], [77.2, 5355.0], [77.3, 5363.0], [77.4, 5363.0], [77.5, 5405.0], [77.6, 5405.0], [77.7, 5410.0], [77.8, 5410.0], [77.9, 5412.0], [78.0, 5412.0], [78.1, 5432.0], [78.2, 5432.0], [78.3, 5440.0], [78.4, 5440.0], [78.5, 5448.0], [78.6, 5448.0], [78.7, 5451.0], [78.8, 5451.0], [78.9, 5457.0], [79.0, 5457.0], [79.1, 5477.0], [79.2, 5477.0], [79.3, 5507.0], [79.4, 5507.0], [79.5, 5519.0], [79.6, 5519.0], [79.7, 5537.0], [79.8, 5537.0], [79.9, 5542.0], [80.0, 5542.0], [80.1, 5551.0], [80.2, 5551.0], [80.3, 5553.0], [80.4, 5553.0], [80.5, 5557.0], [80.6, 5557.0], [80.7, 5590.0], [80.8, 5590.0], [80.9, 5595.0], [81.0, 5595.0], [81.1, 5609.0], [81.2, 5609.0], [81.3, 5630.0], [81.4, 5630.0], [81.5, 5631.0], [81.6, 5631.0], [81.7, 5641.0], [81.8, 5641.0], [81.9, 5673.0], [82.0, 5673.0], [82.1, 5681.0], [82.2, 5681.0], [82.3, 5705.0], [82.4, 5705.0], [82.5, 5717.0], [82.6, 5717.0], [82.7, 5718.0], [82.8, 5718.0], [82.9, 5719.0], [83.0, 5719.0], [83.1, 5730.0], [83.2, 5730.0], [83.3, 5732.0], [83.4, 5732.0], [83.5, 5737.0], [83.6, 5737.0], [83.7, 5765.0], [83.8, 5765.0], [83.9, 5768.0], [84.0, 5768.0], [84.1, 5781.0], [84.2, 5781.0], [84.3, 5846.0], [84.4, 5846.0], [84.5, 5927.0], [84.6, 5927.0], [84.7, 5941.0], [84.8, 5941.0], [84.9, 5952.0], [85.0, 5952.0], [85.1, 5959.0], [85.2, 5959.0], [85.3, 5968.0], [85.4, 5968.0], [85.5, 5972.0], [85.6, 5972.0], [85.7, 5974.0], [85.8, 5974.0], [85.9, 5986.0], [86.0, 5986.0], [86.1, 6010.0], [86.2, 6010.0], [86.3, 6013.0], [86.4, 6013.0], [86.5, 6022.0], [86.6, 6022.0], [86.7, 6044.0], [86.8, 6044.0], [86.9, 6048.0], [87.0, 6048.0], [87.1, 6052.0], [87.2, 6052.0], [87.3, 6058.0], [87.4, 6058.0], [87.5, 6066.0], [87.6, 6066.0], [87.7, 6071.0], [87.8, 6071.0], [87.9, 6096.0], [88.0, 6096.0], [88.1, 6097.0], [88.2, 6097.0], [88.3, 6103.0], [88.4, 6103.0], [88.5, 6105.0], [88.6, 6105.0], [88.7, 6120.0], [88.8, 6120.0], [88.9, 6129.0], [89.0, 6129.0], [89.1, 6146.0], [89.2, 6146.0], [89.3, 6180.0], [89.4, 6180.0], [89.5, 6195.0], [89.6, 6195.0], [89.7, 6205.0], [89.8, 6205.0], [89.9, 6223.0], [90.0, 6223.0], [90.1, 6227.0], [90.2, 6227.0], [90.3, 6232.0], [90.4, 6232.0], [90.5, 6233.0], [90.6, 6233.0], [90.7, 6242.0], [90.8, 6242.0], [90.9, 6248.0], [91.0, 6248.0], [91.1, 6251.0], [91.2, 6251.0], [91.3, 6254.0], [91.4, 6254.0], [91.5, 6265.0], [91.6, 6265.0], [91.7, 6274.0], [91.8, 6274.0], [91.9, 6371.0], [92.0, 6371.0], [92.1, 6377.0], [92.2, 6377.0], [92.3, 6386.0], [92.4, 6386.0], [92.5, 6410.0], [92.6, 6410.0], [92.7, 6418.0], [92.8, 6418.0], [92.9, 6452.0], [93.0, 6452.0], [93.1, 6489.0], [93.2, 6489.0], [93.3, 6573.0], [93.4, 6573.0], [93.5, 6580.0], [93.6, 6580.0], [93.7, 6592.0], [93.8, 6592.0], [93.9, 6594.0], [94.0, 6594.0], [94.1, 6657.0], [94.2, 6657.0], [94.3, 6707.0], [94.4, 6707.0], [94.5, 6751.0], [94.6, 6751.0], [94.7, 6772.0], [94.8, 6772.0], [94.9, 6783.0], [95.0, 6783.0], [95.1, 6786.0], [95.2, 6786.0], [95.3, 6858.0], [95.4, 6858.0], [95.5, 6864.0], [95.6, 6864.0], [95.7, 7017.0], [95.8, 7017.0], [95.9, 7052.0], [96.0, 7052.0], [96.1, 7083.0], [96.2, 7083.0], [96.3, 7355.0], [96.4, 7355.0], [96.5, 7384.0], [96.6, 7384.0], [96.7, 7579.0], [96.8, 7579.0], [96.9, 7654.0], [97.0, 7654.0], [97.1, 7700.0], [97.2, 7700.0], [97.3, 7716.0], [97.4, 7716.0], [97.5, 7872.0], [97.6, 7872.0], [97.7, 7883.0], [97.8, 7883.0], [97.9, 7888.0], [98.0, 7888.0], [98.1, 7922.0], [98.2, 7922.0], [98.3, 7973.0], [98.4, 7973.0], [98.5, 8014.0], [98.6, 8014.0], [98.7, 8088.0], [98.8, 8088.0], [98.9, 8114.0], [99.0, 8114.0], [99.1, 8177.0], [99.2, 8177.0], [99.3, 8296.0], [99.4, 8296.0], [99.5, 8410.0], [99.6, 8410.0], [99.7, 8790.0], [99.8, 8790.0], [99.9, 9855.0], [100.0, 9855.0]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[0.0, 1725.0], [0.1, 1725.0], [0.2, 1725.0], [0.3, 1725.0], [0.4, 1725.0], [0.5, 1725.0], [0.6, 1725.0], [0.7, 1870.0], [0.8, 1870.0], [0.9, 1870.0], [1.0, 1870.0], [1.1, 1870.0], [1.2, 1870.0], [1.3, 1870.0], [1.4, 1890.0], [1.5, 1890.0], [1.6, 1890.0], [1.7, 1890.0], [1.8, 1890.0], [1.9, 1890.0], [2.0, 1916.0], [2.1, 1916.0], [2.2, 1916.0], [2.3, 1916.0], [2.4, 1916.0], [2.5, 1916.0], [2.6, 1916.0], [2.7, 1961.0], [2.8, 1961.0], [2.9, 1961.0], [3.0, 1961.0], [3.1, 1961.0], [3.2, 1961.0], [3.3, 1963.0], [3.4, 1963.0], [3.5, 1963.0], [3.6, 1963.0], [3.7, 1963.0], [3.8, 1963.0], [3.9, 1963.0], [4.0, 1973.0], [4.1, 1973.0], [4.2, 1973.0], [4.3, 1973.0], [4.4, 1973.0], [4.5, 1973.0], [4.6, 1973.0], [4.7, 2023.0], [4.8, 2023.0], [4.9, 2023.0], [5.0, 2023.0], [5.1, 2023.0], [5.2, 2023.0], [5.3, 2036.0], [5.4, 2036.0], [5.5, 2036.0], [5.6, 2036.0], [5.7, 2036.0], [5.8, 2036.0], [5.9, 2036.0], [6.0, 2066.0], [6.1, 2066.0], [6.2, 2066.0], [6.3, 2066.0], [6.4, 2066.0], [6.5, 2066.0], [6.6, 2074.0], [6.7, 2074.0], [6.8, 2074.0], [6.9, 2074.0], [7.0, 2074.0], [7.1, 2074.0], [7.2, 2074.0], [7.3, 2098.0], [7.4, 2098.0], [7.5, 2098.0], [7.6, 2098.0], [7.7, 2098.0], [7.8, 2098.0], [7.9, 2101.0], [8.0, 2101.0], [8.1, 2101.0], [8.2, 2101.0], [8.3, 2101.0], [8.4, 2101.0], [8.5, 2101.0], [8.6, 2125.0], [8.7, 2125.0], [8.8, 2125.0], [8.9, 2125.0], [9.0, 2125.0], [9.1, 2125.0], [9.2, 2125.0], [9.3, 2182.0], [9.4, 2182.0], [9.5, 2182.0], [9.6, 2182.0], [9.7, 2182.0], [9.8, 2182.0], [9.9, 2222.0], [10.0, 2222.0], [10.1, 2222.0], [10.2, 2222.0], [10.3, 2222.0], [10.4, 2222.0], [10.5, 2222.0], [10.6, 2251.0], [10.7, 2251.0], [10.8, 2251.0], [10.9, 2251.0], [11.0, 2251.0], [11.1, 2251.0], [11.2, 2275.0], [11.3, 2275.0], [11.4, 2275.0], [11.5, 2275.0], [11.6, 2275.0], [11.7, 2275.0], [11.8, 2275.0], [11.9, 2291.0], [12.0, 2291.0], [12.1, 2291.0], [12.2, 2291.0], [12.3, 2291.0], [12.4, 2291.0], [12.5, 2291.0], [12.6, 2314.0], [12.7, 2314.0], [12.8, 2314.0], [12.9, 2314.0], [13.0, 2314.0], [13.1, 2314.0], [13.2, 2330.0], [13.3, 2330.0], [13.4, 2330.0], [13.5, 2330.0], [13.6, 2330.0], [13.7, 2330.0], [13.8, 2330.0], [13.9, 2330.0], [14.0, 2330.0], [14.1, 2330.0], [14.2, 2330.0], [14.3, 2330.0], [14.4, 2330.0], [14.5, 2337.0], [14.6, 2337.0], [14.7, 2337.0], [14.8, 2337.0], [14.9, 2337.0], [15.0, 2337.0], [15.1, 2337.0], [15.2, 2340.0], [15.3, 2340.0], [15.4, 2340.0], [15.5, 2340.0], [15.6, 2340.0], [15.7, 2340.0], [15.8, 2353.0], [15.9, 2353.0], [16.0, 2353.0], [16.1, 2353.0], [16.2, 2353.0], [16.3, 2353.0], [16.4, 2353.0], [16.5, 2355.0], [16.6, 2355.0], [16.7, 2355.0], [16.8, 2355.0], [16.9, 2355.0], [17.0, 2355.0], [17.1, 2355.0], [17.2, 2356.0], [17.3, 2356.0], [17.4, 2356.0], [17.5, 2356.0], [17.6, 2356.0], [17.7, 2356.0], [17.8, 2358.0], [17.9, 2358.0], [18.0, 2358.0], [18.1, 2358.0], [18.2, 2358.0], [18.3, 2358.0], [18.4, 2358.0], [18.5, 2377.0], [18.6, 2377.0], [18.7, 2377.0], [18.8, 2377.0], [18.9, 2377.0], [19.0, 2377.0], [19.1, 2400.0], [19.2, 2400.0], [19.3, 2400.0], [19.4, 2400.0], [19.5, 2400.0], [19.6, 2400.0], [19.7, 2400.0], [19.8, 2406.0], [19.9, 2406.0], [20.0, 2406.0], [20.1, 2406.0], [20.2, 2406.0], [20.3, 2406.0], [20.4, 2412.0], [20.5, 2412.0], [20.6, 2412.0], [20.7, 2412.0], [20.8, 2412.0], [20.9, 2412.0], [21.0, 2412.0], [21.1, 2415.0], [21.2, 2415.0], [21.3, 2415.0], [21.4, 2415.0], [21.5, 2415.0], [21.6, 2415.0], [21.7, 2415.0], [21.8, 2442.0], [21.9, 2442.0], [22.0, 2442.0], [22.1, 2442.0], [22.2, 2442.0], [22.3, 2442.0], [22.4, 2480.0], [22.5, 2480.0], [22.6, 2480.0], [22.7, 2480.0], [22.8, 2480.0], [22.9, 2480.0], [23.0, 2480.0], [23.1, 2588.0], [23.2, 2588.0], [23.3, 2588.0], [23.4, 2588.0], [23.5, 2588.0], [23.6, 2588.0], [23.7, 2593.0], [23.8, 2593.0], [23.9, 2593.0], [24.0, 2593.0], [24.1, 2593.0], [24.2, 2593.0], [24.3, 2593.0], [24.4, 2594.0], [24.5, 2594.0], [24.6, 2594.0], [24.7, 2594.0], [24.8, 2594.0], [24.9, 2594.0], [25.0, 2594.0], [25.1, 2597.0], [25.2, 2597.0], [25.3, 2597.0], [25.4, 2597.0], [25.5, 2597.0], [25.6, 2597.0], [25.7, 2607.0], [25.8, 2607.0], [25.9, 2607.0], [26.0, 2607.0], [26.1, 2607.0], [26.2, 2607.0], [26.3, 2607.0], [26.4, 2689.0], [26.5, 2689.0], [26.6, 2689.0], [26.7, 2689.0], [26.8, 2689.0], [26.9, 2689.0], [27.0, 2707.0], [27.1, 2707.0], [27.2, 2707.0], [27.3, 2707.0], [27.4, 2707.0], [27.5, 2707.0], [27.6, 2707.0], [27.7, 2740.0], [27.8, 2740.0], [27.9, 2740.0], [28.0, 2740.0], [28.1, 2740.0], [28.2, 2740.0], [28.3, 2754.0], [28.4, 2754.0], [28.5, 2754.0], [28.6, 2754.0], [28.7, 2754.0], [28.8, 2754.0], [28.9, 2754.0], [29.0, 2798.0], [29.1, 2798.0], [29.2, 2798.0], [29.3, 2798.0], [29.4, 2798.0], [29.5, 2798.0], [29.6, 2798.0], [29.7, 2818.0], [29.8, 2818.0], [29.9, 2818.0], [30.0, 2818.0], [30.1, 2818.0], [30.2, 2818.0], [30.3, 2822.0], [30.4, 2822.0], [30.5, 2822.0], [30.6, 2822.0], [30.7, 2822.0], [30.8, 2822.0], [30.9, 2822.0], [31.0, 2826.0], [31.1, 2826.0], [31.2, 2826.0], [31.3, 2826.0], [31.4, 2826.0], [31.5, 2826.0], [31.6, 2834.0], [31.7, 2834.0], [31.8, 2834.0], [31.9, 2834.0], [32.0, 2834.0], [32.1, 2834.0], [32.2, 2834.0], [32.3, 2846.0], [32.4, 2846.0], [32.5, 2846.0], [32.6, 2846.0], [32.7, 2846.0], [32.8, 2846.0], [32.9, 2862.0], [33.0, 2862.0], [33.1, 2862.0], [33.2, 2862.0], [33.3, 2862.0], [33.4, 2862.0], [33.5, 2862.0], [33.6, 2878.0], [33.7, 2878.0], [33.8, 2878.0], [33.9, 2878.0], [34.0, 2878.0], [34.1, 2878.0], [34.2, 2878.0], [34.3, 2889.0], [34.4, 2889.0], [34.5, 2889.0], [34.6, 2889.0], [34.7, 2889.0], [34.8, 2889.0], [34.9, 2895.0], [35.0, 2895.0], [35.1, 2895.0], [35.2, 2895.0], [35.3, 2895.0], [35.4, 2895.0], [35.5, 2895.0], [35.6, 2908.0], [35.7, 2908.0], [35.8, 2908.0], [35.9, 2908.0], [36.0, 2908.0], [36.1, 2908.0], [36.2, 2908.0], [36.3, 2908.0], [36.4, 2908.0], [36.5, 2908.0], [36.6, 2908.0], [36.7, 2908.0], [36.8, 2908.0], [36.9, 2916.0], [37.0, 2916.0], [37.1, 2916.0], [37.2, 2916.0], [37.3, 2916.0], [37.4, 2916.0], [37.5, 2916.0], [37.6, 2923.0], [37.7, 2923.0], [37.8, 2923.0], [37.9, 2923.0], [38.0, 2923.0], [38.1, 2923.0], [38.2, 2927.0], [38.3, 2927.0], [38.4, 2927.0], [38.5, 2927.0], [38.6, 2927.0], [38.7, 2927.0], [38.8, 2927.0], [38.9, 2937.0], [39.0, 2937.0], [39.1, 2937.0], [39.2, 2937.0], [39.3, 2937.0], [39.4, 2937.0], [39.5, 2950.0], [39.6, 2950.0], [39.7, 2950.0], [39.8, 2950.0], [39.9, 2950.0], [40.0, 2950.0], [40.1, 2950.0], [40.2, 2967.0], [40.3, 2967.0], [40.4, 2967.0], [40.5, 2967.0], [40.6, 2967.0], [40.7, 2967.0], [40.8, 2979.0], [40.9, 2979.0], [41.0, 2979.0], [41.1, 2979.0], [41.2, 2979.0], [41.3, 2979.0], [41.4, 2979.0], [41.5, 2991.0], [41.6, 2991.0], [41.7, 2991.0], [41.8, 2991.0], [41.9, 2991.0], [42.0, 2991.0], [42.1, 2991.0], [42.2, 2994.0], [42.3, 2994.0], [42.4, 2994.0], [42.5, 2994.0], [42.6, 2994.0], [42.7, 2994.0], [42.8, 2994.0], [42.9, 2994.0], [43.0, 2994.0], [43.1, 2994.0], [43.2, 2994.0], [43.3, 2994.0], [43.4, 2994.0], [43.5, 3000.0], [43.6, 3000.0], [43.7, 3000.0], [43.8, 3000.0], [43.9, 3000.0], [44.0, 3000.0], [44.1, 3001.0], [44.2, 3001.0], [44.3, 3001.0], [44.4, 3001.0], [44.5, 3001.0], [44.6, 3001.0], [44.7, 3001.0], [44.8, 3001.0], [44.9, 3001.0], [45.0, 3001.0], [45.1, 3001.0], [45.2, 3001.0], [45.3, 3001.0], [45.4, 3005.0], [45.5, 3005.0], [45.6, 3005.0], [45.7, 3005.0], [45.8, 3005.0], [45.9, 3005.0], [46.0, 3005.0], [46.1, 3007.0], [46.2, 3007.0], [46.3, 3007.0], [46.4, 3007.0], [46.5, 3007.0], [46.6, 3007.0], [46.7, 3007.0], [46.8, 3010.0], [46.9, 3010.0], [47.0, 3010.0], [47.1, 3010.0], [47.2, 3010.0], [47.3, 3010.0], [47.4, 3015.0], [47.5, 3015.0], [47.6, 3015.0], [47.7, 3015.0], [47.8, 3015.0], [47.9, 3015.0], [48.0, 3015.0], [48.1, 3016.0], [48.2, 3016.0], [48.3, 3016.0], [48.4, 3016.0], [48.5, 3016.0], [48.6, 3016.0], [48.7, 3021.0], [48.8, 3021.0], [48.9, 3021.0], [49.0, 3021.0], [49.1, 3021.0], [49.2, 3021.0], [49.3, 3021.0], [49.4, 3028.0], [49.5, 3028.0], [49.6, 3028.0], [49.7, 3028.0], [49.8, 3028.0], [49.9, 3028.0], [50.0, 3040.0], [50.1, 3040.0], [50.2, 3040.0], [50.3, 3040.0], [50.4, 3040.0], [50.5, 3040.0], [50.6, 3040.0], [50.7, 3044.0], [50.8, 3044.0], [50.9, 3044.0], [51.0, 3044.0], [51.1, 3044.0], [51.2, 3044.0], [51.3, 3044.0], [51.4, 3052.0], [51.5, 3052.0], [51.6, 3052.0], [51.7, 3052.0], [51.8, 3052.0], [51.9, 3052.0], [52.0, 3053.0], [52.1, 3053.0], [52.2, 3053.0], [52.3, 3053.0], [52.4, 3053.0], [52.5, 3053.0], [52.6, 3053.0], [52.7, 3061.0], [52.8, 3061.0], [52.9, 3061.0], [53.0, 3061.0], [53.1, 3061.0], [53.2, 3061.0], [53.3, 3065.0], [53.4, 3065.0], [53.5, 3065.0], [53.6, 3065.0], [53.7, 3065.0], [53.8, 3065.0], [53.9, 3065.0], [54.0, 3071.0], [54.1, 3071.0], [54.2, 3071.0], [54.3, 3071.0], [54.4, 3071.0], [54.5, 3071.0], [54.6, 3071.0], [54.7, 3080.0], [54.8, 3080.0], [54.9, 3080.0], [55.0, 3080.0], [55.1, 3080.0], [55.2, 3080.0], [55.3, 3081.0], [55.4, 3081.0], [55.5, 3081.0], [55.6, 3081.0], [55.7, 3081.0], [55.8, 3081.0], [55.9, 3081.0], [56.0, 3083.0], [56.1, 3083.0], [56.2, 3083.0], [56.3, 3083.0], [56.4, 3083.0], [56.5, 3083.0], [56.6, 3096.0], [56.7, 3096.0], [56.8, 3096.0], [56.9, 3096.0], [57.0, 3096.0], [57.1, 3096.0], [57.2, 3096.0], [57.3, 3097.0], [57.4, 3097.0], [57.5, 3097.0], [57.6, 3097.0], [57.7, 3097.0], [57.8, 3097.0], [57.9, 3098.0], [58.0, 3098.0], [58.1, 3098.0], [58.2, 3098.0], [58.3, 3098.0], [58.4, 3098.0], [58.5, 3098.0], [58.6, 3101.0], [58.7, 3101.0], [58.8, 3101.0], [58.9, 3101.0], [59.0, 3101.0], [59.1, 3101.0], [59.2, 3101.0], [59.3, 3104.0], [59.4, 3104.0], [59.5, 3104.0], [59.6, 3104.0], [59.7, 3104.0], [59.8, 3104.0], [59.9, 3120.0], [60.0, 3120.0], [60.1, 3120.0], [60.2, 3120.0], [60.3, 3120.0], [60.4, 3120.0], [60.5, 3120.0], [60.6, 3125.0], [60.7, 3125.0], [60.8, 3125.0], [60.9, 3125.0], [61.0, 3125.0], [61.1, 3125.0], [61.2, 3132.0], [61.3, 3132.0], [61.4, 3132.0], [61.5, 3132.0], [61.6, 3132.0], [61.7, 3132.0], [61.8, 3132.0], [61.9, 3134.0], [62.0, 3134.0], [62.1, 3134.0], [62.2, 3134.0], [62.3, 3134.0], [62.4, 3134.0], [62.5, 3139.0], [62.6, 3139.0], [62.7, 3139.0], [62.8, 3139.0], [62.9, 3139.0], [63.0, 3139.0], [63.1, 3139.0], [63.2, 3145.0], [63.3, 3145.0], [63.4, 3145.0], [63.5, 3145.0], [63.6, 3145.0], [63.7, 3145.0], [63.8, 3145.0], [63.9, 3149.0], [64.0, 3149.0], [64.1, 3149.0], [64.2, 3149.0], [64.3, 3149.0], [64.4, 3149.0], [64.5, 3159.0], [64.6, 3159.0], [64.7, 3159.0], [64.8, 3159.0], [64.9, 3159.0], [65.0, 3159.0], [65.1, 3159.0], [65.2, 3162.0], [65.3, 3162.0], [65.4, 3162.0], [65.5, 3162.0], [65.6, 3162.0], [65.7, 3162.0], [65.8, 3166.0], [65.9, 3166.0], [66.0, 3166.0], [66.1, 3166.0], [66.2, 3166.0], [66.3, 3166.0], [66.4, 3166.0], [66.5, 3166.0], [66.6, 3166.0], [66.7, 3166.0], [66.8, 3166.0], [66.9, 3166.0], [67.0, 3166.0], [67.1, 3166.0], [67.2, 3166.0], [67.3, 3166.0], [67.4, 3166.0], [67.5, 3166.0], [67.6, 3166.0], [67.7, 3166.0], [67.8, 3180.0], [67.9, 3180.0], [68.0, 3180.0], [68.1, 3180.0], [68.2, 3180.0], [68.3, 3180.0], [68.4, 3180.0], [68.5, 3181.0], [68.6, 3181.0], [68.7, 3181.0], [68.8, 3181.0], [68.9, 3181.0], [69.0, 3181.0], [69.1, 3187.0], [69.2, 3187.0], [69.3, 3187.0], [69.4, 3187.0], [69.5, 3187.0], [69.6, 3187.0], [69.7, 3187.0], [69.8, 3190.0], [69.9, 3190.0], [70.0, 3190.0], [70.1, 3190.0], [70.2, 3190.0], [70.3, 3190.0], [70.4, 3199.0], [70.5, 3199.0], [70.6, 3199.0], [70.7, 3199.0], [70.8, 3199.0], [70.9, 3199.0], [71.0, 3199.0], [71.1, 3200.0], [71.2, 3200.0], [71.3, 3200.0], [71.4, 3200.0], [71.5, 3200.0], [71.6, 3200.0], [71.7, 3200.0], [71.8, 3214.0], [71.9, 3214.0], [72.0, 3214.0], [72.1, 3214.0], [72.2, 3214.0], [72.3, 3214.0], [72.4, 3220.0], [72.5, 3220.0], [72.6, 3220.0], [72.7, 3220.0], [72.8, 3220.0], [72.9, 3220.0], [73.0, 3220.0], [73.1, 3223.0], [73.2, 3223.0], [73.3, 3223.0], [73.4, 3223.0], [73.5, 3223.0], [73.6, 3223.0], [73.7, 3224.0], [73.8, 3224.0], [73.9, 3224.0], [74.0, 3224.0], [74.1, 3224.0], [74.2, 3224.0], [74.3, 3224.0], [74.4, 3238.0], [74.5, 3238.0], [74.6, 3238.0], [74.7, 3238.0], [74.8, 3238.0], [74.9, 3238.0], [75.0, 3238.0], [75.1, 3238.0], [75.2, 3238.0], [75.3, 3238.0], [75.4, 3238.0], [75.5, 3238.0], [75.6, 3238.0], [75.7, 3247.0], [75.8, 3247.0], [75.9, 3247.0], [76.0, 3247.0], [76.1, 3247.0], [76.2, 3247.0], [76.3, 3247.0], [76.4, 3250.0], [76.5, 3250.0], [76.6, 3250.0], [76.7, 3250.0], [76.8, 3250.0], [76.9, 3250.0], [77.0, 3255.0], [77.1, 3255.0], [77.2, 3255.0], [77.3, 3255.0], [77.4, 3255.0], [77.5, 3255.0], [77.6, 3255.0], [77.7, 3257.0], [77.8, 3257.0], [77.9, 3257.0], [78.0, 3257.0], [78.1, 3257.0], [78.2, 3257.0], [78.3, 3263.0], [78.4, 3263.0], [78.5, 3263.0], [78.6, 3263.0], [78.7, 3263.0], [78.8, 3263.0], [78.9, 3263.0], [79.0, 3266.0], [79.1, 3266.0], [79.2, 3266.0], [79.3, 3266.0], [79.4, 3266.0], [79.5, 3266.0], [79.6, 3266.0], [79.7, 3272.0], [79.8, 3272.0], [79.9, 3272.0], [80.0, 3272.0], [80.1, 3272.0], [80.2, 3272.0], [80.3, 3279.0], [80.4, 3279.0], [80.5, 3279.0], [80.6, 3279.0], [80.7, 3279.0], [80.8, 3279.0], [80.9, 3279.0], [81.0, 3281.0], [81.1, 3281.0], [81.2, 3281.0], [81.3, 3281.0], [81.4, 3281.0], [81.5, 3281.0], [81.6, 3286.0], [81.7, 3286.0], [81.8, 3286.0], [81.9, 3286.0], [82.0, 3286.0], [82.1, 3286.0], [82.2, 3286.0], [82.3, 3295.0], [82.4, 3295.0], [82.5, 3295.0], [82.6, 3295.0], [82.7, 3295.0], [82.8, 3295.0], [82.9, 3300.0], [83.0, 3300.0], [83.1, 3300.0], [83.2, 3300.0], [83.3, 3300.0], [83.4, 3300.0], [83.5, 3300.0], [83.6, 3301.0], [83.7, 3301.0], [83.8, 3301.0], [83.9, 3301.0], [84.0, 3301.0], [84.1, 3301.0], [84.2, 3301.0], [84.3, 3306.0], [84.4, 3306.0], [84.5, 3306.0], [84.6, 3306.0], [84.7, 3306.0], [84.8, 3306.0], [84.9, 3314.0], [85.0, 3314.0], [85.1, 3314.0], [85.2, 3314.0], [85.3, 3314.0], [85.4, 3314.0], [85.5, 3314.0], [85.6, 3315.0], [85.7, 3315.0], [85.8, 3315.0], [85.9, 3315.0], [86.0, 3315.0], [86.1, 3315.0], [86.2, 3328.0], [86.3, 3328.0], [86.4, 3328.0], [86.5, 3328.0], [86.6, 3328.0], [86.7, 3328.0], [86.8, 3328.0], [86.9, 3328.0], [87.0, 3328.0], [87.1, 3328.0], [87.2, 3328.0], [87.3, 3328.0], [87.4, 3328.0], [87.5, 3328.0], [87.6, 3332.0], [87.7, 3332.0], [87.8, 3332.0], [87.9, 3332.0], [88.0, 3332.0], [88.1, 3332.0], [88.2, 3333.0], [88.3, 3333.0], [88.4, 3333.0], [88.5, 3333.0], [88.6, 3333.0], [88.7, 3333.0], [88.8, 3333.0], [88.9, 3374.0], [89.0, 3374.0], [89.1, 3374.0], [89.2, 3374.0], [89.3, 3374.0], [89.4, 3374.0], [89.5, 3375.0], [89.6, 3375.0], [89.7, 3375.0], [89.8, 3375.0], [89.9, 3375.0], [90.0, 3375.0], [90.1, 3375.0], [90.2, 3398.0], [90.3, 3398.0], [90.4, 3398.0], [90.5, 3398.0], [90.6, 3398.0], [90.7, 3398.0], [90.8, 3407.0], [90.9, 3407.0], [91.0, 3407.0], [91.1, 3407.0], [91.2, 3407.0], [91.3, 3407.0], [91.4, 3407.0], [91.5, 3408.0], [91.6, 3408.0], [91.7, 3408.0], [91.8, 3408.0], [91.9, 3408.0], [92.0, 3408.0], [92.1, 3408.0], [92.2, 3408.0], [92.3, 3408.0], [92.4, 3408.0], [92.5, 3408.0], [92.6, 3408.0], [92.7, 3408.0], [92.8, 3414.0], [92.9, 3414.0], [93.0, 3414.0], [93.1, 3414.0], [93.2, 3414.0], [93.3, 3414.0], [93.4, 3414.0], [93.5, 3428.0], [93.6, 3428.0], [93.7, 3428.0], [93.8, 3428.0], [93.9, 3428.0], [94.0, 3428.0], [94.1, 3453.0], [94.2, 3453.0], [94.3, 3453.0], [94.4, 3453.0], [94.5, 3453.0], [94.6, 3453.0], [94.7, 3453.0], [94.8, 3569.0], [94.9, 3569.0], [95.0, 3569.0], [95.1, 3569.0], [95.2, 3569.0], [95.3, 3569.0], [95.4, 3840.0], [95.5, 3840.0], [95.6, 3840.0], [95.7, 3840.0], [95.8, 3840.0], [95.9, 3840.0], [96.0, 3840.0], [96.1, 4073.0], [96.2, 4073.0], [96.3, 4073.0], [96.4, 4073.0], [96.5, 4073.0], [96.6, 4073.0], [96.7, 4073.0], [96.8, 4810.0], [96.9, 4810.0], [97.0, 4810.0], [97.1, 4810.0], [97.2, 4810.0], [97.3, 4810.0], [97.4, 4916.0], [97.5, 4916.0], [97.6, 4916.0], [97.7, 4916.0], [97.8, 4916.0], [97.9, 4916.0], [98.0, 4916.0], [98.1, 4995.0], [98.2, 4995.0], [98.3, 4995.0], [98.4, 4995.0], [98.5, 4995.0], [98.6, 4995.0], [98.7, 5011.0], [98.8, 5011.0], [98.9, 5011.0], [99.0, 5011.0], [99.1, 5011.0], [99.2, 5011.0], [99.3, 5011.0], [99.4, 5234.0], [99.5, 5234.0], [99.6, 5234.0], [99.7, 5234.0], [99.8, 5234.0], [99.9, 5234.0], [100.0, 5234.0]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[0.0, 27.0], [0.1, 27.0], [0.2, 27.0], [0.3, 27.0], [0.4, 27.0], [0.5, 27.0], [0.6, 27.0], [0.7, 27.0], [0.8, 27.0], [0.9, 27.0], [1.0, 27.0], [1.1, 27.0], [1.2, 27.0], [1.3, 27.0], [1.4, 63.0], [1.5, 63.0], [1.6, 63.0], [1.7, 63.0], [1.8, 63.0], [1.9, 63.0], [2.0, 94.0], [2.1, 94.0], [2.2, 94.0], [2.3, 94.0], [2.4, 94.0], [2.5, 94.0], [2.6, 94.0], [2.7, 101.0], [2.8, 101.0], [2.9, 101.0], [3.0, 101.0], [3.1, 101.0], [3.2, 101.0], [3.3, 107.0], [3.4, 107.0], [3.5, 107.0], [3.6, 107.0], [3.7, 107.0], [3.8, 107.0], [3.9, 107.0], [4.0, 119.0], [4.1, 119.0], [4.2, 119.0], [4.3, 119.0], [4.4, 119.0], [4.5, 119.0], [4.6, 119.0], [4.7, 122.0], [4.8, 122.0], [4.9, 122.0], [5.0, 122.0], [5.1, 122.0], [5.2, 122.0], [5.3, 128.0], [5.4, 128.0], [5.5, 128.0], [5.6, 128.0], [5.7, 128.0], [5.8, 128.0], [5.9, 128.0], [6.0, 128.0], [6.1, 128.0], [6.2, 128.0], [6.3, 128.0], [6.4, 128.0], [6.5, 128.0], [6.6, 129.0], [6.7, 129.0], [6.8, 129.0], [6.9, 129.0], [7.0, 129.0], [7.1, 129.0], [7.2, 129.0], [7.3, 138.0], [7.4, 138.0], [7.5, 138.0], [7.6, 138.0], [7.7, 138.0], [7.8, 138.0], [7.9, 142.0], [8.0, 142.0], [8.1, 142.0], [8.2, 142.0], [8.3, 142.0], [8.4, 142.0], [8.5, 142.0], [8.6, 939.0], [8.7, 939.0], [8.8, 939.0], [8.9, 939.0], [9.0, 939.0], [9.1, 939.0], [9.2, 939.0], [9.3, 1140.0], [9.4, 1140.0], [9.5, 1140.0], [9.6, 1140.0], [9.7, 1140.0], [9.8, 1140.0], [9.9, 1350.0], [10.0, 1350.0], [10.1, 1350.0], [10.2, 1350.0], [10.3, 1350.0], [10.4, 1350.0], [10.5, 1350.0], [10.6, 1363.0], [10.7, 1363.0], [10.8, 1363.0], [10.9, 1363.0], [11.0, 1363.0], [11.1, 1363.0], [11.2, 1678.0], [11.3, 1678.0], [11.4, 1678.0], [11.5, 1678.0], [11.6, 1678.0], [11.7, 1678.0], [11.8, 1678.0], [11.9, 1724.0], [12.0, 1724.0], [12.1, 1724.0], [12.2, 1724.0], [12.3, 1724.0], [12.4, 1724.0], [12.5, 1724.0], [12.6, 1848.0], [12.7, 1848.0], [12.8, 1848.0], [12.9, 1848.0], [13.0, 1848.0], [13.1, 1848.0], [13.2, 1850.0], [13.3, 1850.0], [13.4, 1850.0], [13.5, 1850.0], [13.6, 1850.0], [13.7, 1850.0], [13.8, 1850.0], [13.9, 1851.0], [14.0, 1851.0], [14.1, 1851.0], [14.2, 1851.0], [14.3, 1851.0], [14.4, 1851.0], [14.5, 1897.0], [14.6, 1897.0], [14.7, 1897.0], [14.8, 1897.0], [14.9, 1897.0], [15.0, 1897.0], [15.1, 1897.0], [15.2, 1999.0], [15.3, 1999.0], [15.4, 1999.0], [15.5, 1999.0], [15.6, 1999.0], [15.7, 1999.0], [15.8, 2004.0], [15.9, 2004.0], [16.0, 2004.0], [16.1, 2004.0], [16.2, 2004.0], [16.3, 2004.0], [16.4, 2004.0], [16.5, 2073.0], [16.6, 2073.0], [16.7, 2073.0], [16.8, 2073.0], [16.9, 2073.0], [17.0, 2073.0], [17.1, 2073.0], [17.2, 2202.0], [17.3, 2202.0], [17.4, 2202.0], [17.5, 2202.0], [17.6, 2202.0], [17.7, 2202.0], [17.8, 2228.0], [17.9, 2228.0], [18.0, 2228.0], [18.1, 2228.0], [18.2, 2228.0], [18.3, 2228.0], [18.4, 2228.0], [18.5, 2283.0], [18.6, 2283.0], [18.7, 2283.0], [18.8, 2283.0], [18.9, 2283.0], [19.0, 2283.0], [19.1, 2307.0], [19.2, 2307.0], [19.3, 2307.0], [19.4, 2307.0], [19.5, 2307.0], [19.6, 2307.0], [19.7, 2307.0], [19.8, 2311.0], [19.9, 2311.0], [20.0, 2311.0], [20.1, 2311.0], [20.2, 2311.0], [20.3, 2311.0], [20.4, 2322.0], [20.5, 2322.0], [20.6, 2322.0], [20.7, 2322.0], [20.8, 2322.0], [20.9, 2322.0], [21.0, 2322.0], [21.1, 2336.0], [21.2, 2336.0], [21.3, 2336.0], [21.4, 2336.0], [21.5, 2336.0], [21.6, 2336.0], [21.7, 2336.0], [21.8, 2370.0], [21.9, 2370.0], [22.0, 2370.0], [22.1, 2370.0], [22.2, 2370.0], [22.3, 2370.0], [22.4, 2405.0], [22.5, 2405.0], [22.6, 2405.0], [22.7, 2405.0], [22.8, 2405.0], [22.9, 2405.0], [23.0, 2405.0], [23.1, 2430.0], [23.2, 2430.0], [23.3, 2430.0], [23.4, 2430.0], [23.5, 2430.0], [23.6, 2430.0], [23.7, 2435.0], [23.8, 2435.0], [23.9, 2435.0], [24.0, 2435.0], [24.1, 2435.0], [24.2, 2435.0], [24.3, 2435.0], [24.4, 2482.0], [24.5, 2482.0], [24.6, 2482.0], [24.7, 2482.0], [24.8, 2482.0], [24.9, 2482.0], [25.0, 2482.0], [25.1, 2514.0], [25.2, 2514.0], [25.3, 2514.0], [25.4, 2514.0], [25.5, 2514.0], [25.6, 2514.0], [25.7, 2515.0], [25.8, 2515.0], [25.9, 2515.0], [26.0, 2515.0], [26.1, 2515.0], [26.2, 2515.0], [26.3, 2515.0], [26.4, 2567.0], [26.5, 2567.0], [26.6, 2567.0], [26.7, 2567.0], [26.8, 2567.0], [26.9, 2567.0], [27.0, 2641.0], [27.1, 2641.0], [27.2, 2641.0], [27.3, 2641.0], [27.4, 2641.0], [27.5, 2641.0], [27.6, 2641.0], [27.7, 2688.0], [27.8, 2688.0], [27.9, 2688.0], [28.0, 2688.0], [28.1, 2688.0], [28.2, 2688.0], [28.3, 2692.0], [28.4, 2692.0], [28.5, 2692.0], [28.6, 2692.0], [28.7, 2692.0], [28.8, 2692.0], [28.9, 2692.0], [29.0, 2712.0], [29.1, 2712.0], [29.2, 2712.0], [29.3, 2712.0], [29.4, 2712.0], [29.5, 2712.0], [29.6, 2712.0], [29.7, 2737.0], [29.8, 2737.0], [29.9, 2737.0], [30.0, 2737.0], [30.1, 2737.0], [30.2, 2737.0], [30.3, 2745.0], [30.4, 2745.0], [30.5, 2745.0], [30.6, 2745.0], [30.7, 2745.0], [30.8, 2745.0], [30.9, 2745.0], [31.0, 2746.0], [31.1, 2746.0], [31.2, 2746.0], [31.3, 2746.0], [31.4, 2746.0], [31.5, 2746.0], [31.6, 2757.0], [31.7, 2757.0], [31.8, 2757.0], [31.9, 2757.0], [32.0, 2757.0], [32.1, 2757.0], [32.2, 2757.0], [32.3, 2764.0], [32.4, 2764.0], [32.5, 2764.0], [32.6, 2764.0], [32.7, 2764.0], [32.8, 2764.0], [32.9, 2777.0], [33.0, 2777.0], [33.1, 2777.0], [33.2, 2777.0], [33.3, 2777.0], [33.4, 2777.0], [33.5, 2777.0], [33.6, 2822.0], [33.7, 2822.0], [33.8, 2822.0], [33.9, 2822.0], [34.0, 2822.0], [34.1, 2822.0], [34.2, 2822.0], [34.3, 2848.0], [34.4, 2848.0], [34.5, 2848.0], [34.6, 2848.0], [34.7, 2848.0], [34.8, 2848.0], [34.9, 2874.0], [35.0, 2874.0], [35.1, 2874.0], [35.2, 2874.0], [35.3, 2874.0], [35.4, 2874.0], [35.5, 2874.0], [35.6, 2892.0], [35.7, 2892.0], [35.8, 2892.0], [35.9, 2892.0], [36.0, 2892.0], [36.1, 2892.0], [36.2, 2898.0], [36.3, 2898.0], [36.4, 2898.0], [36.5, 2898.0], [36.6, 2898.0], [36.7, 2898.0], [36.8, 2898.0], [36.9, 2898.0], [37.0, 2898.0], [37.1, 2898.0], [37.2, 2898.0], [37.3, 2898.0], [37.4, 2898.0], [37.5, 2898.0], [37.6, 2934.0], [37.7, 2934.0], [37.8, 2934.0], [37.9, 2934.0], [38.0, 2934.0], [38.1, 2934.0], [38.2, 2947.0], [38.3, 2947.0], [38.4, 2947.0], [38.5, 2947.0], [38.6, 2947.0], [38.7, 2947.0], [38.8, 2947.0], [38.9, 2960.0], [39.0, 2960.0], [39.1, 2960.0], [39.2, 2960.0], [39.3, 2960.0], [39.4, 2960.0], [39.5, 2961.0], [39.6, 2961.0], [39.7, 2961.0], [39.8, 2961.0], [39.9, 2961.0], [40.0, 2961.0], [40.1, 2961.0], [40.2, 2962.0], [40.3, 2962.0], [40.4, 2962.0], [40.5, 2962.0], [40.6, 2962.0], [40.7, 2962.0], [40.8, 2964.0], [40.9, 2964.0], [41.0, 2964.0], [41.1, 2964.0], [41.2, 2964.0], [41.3, 2964.0], [41.4, 2964.0], [41.5, 2972.0], [41.6, 2972.0], [41.7, 2972.0], [41.8, 2972.0], [41.9, 2972.0], [42.0, 2972.0], [42.1, 2972.0], [42.2, 2974.0], [42.3, 2974.0], [42.4, 2974.0], [42.5, 2974.0], [42.6, 2974.0], [42.7, 2974.0], [42.8, 2981.0], [42.9, 2981.0], [43.0, 2981.0], [43.1, 2981.0], [43.2, 2981.0], [43.3, 2981.0], [43.4, 2981.0], [43.5, 2985.0], [43.6, 2985.0], [43.7, 2985.0], [43.8, 2985.0], [43.9, 2985.0], [44.0, 2985.0], [44.1, 2991.0], [44.2, 2991.0], [44.3, 2991.0], [44.4, 2991.0], [44.5, 2991.0], [44.6, 2991.0], [44.7, 2991.0], [44.8, 2996.0], [44.9, 2996.0], [45.0, 2996.0], [45.1, 2996.0], [45.2, 2996.0], [45.3, 2996.0], [45.4, 3010.0], [45.5, 3010.0], [45.6, 3010.0], [45.7, 3010.0], [45.8, 3010.0], [45.9, 3010.0], [46.0, 3010.0], [46.1, 3016.0], [46.2, 3016.0], [46.3, 3016.0], [46.4, 3016.0], [46.5, 3016.0], [46.6, 3016.0], [46.7, 3016.0], [46.8, 3024.0], [46.9, 3024.0], [47.0, 3024.0], [47.1, 3024.0], [47.2, 3024.0], [47.3, 3024.0], [47.4, 3024.0], [47.5, 3024.0], [47.6, 3024.0], [47.7, 3024.0], [47.8, 3024.0], [47.9, 3024.0], [48.0, 3024.0], [48.1, 3036.0], [48.2, 3036.0], [48.3, 3036.0], [48.4, 3036.0], [48.5, 3036.0], [48.6, 3036.0], [48.7, 3036.0], [48.8, 3036.0], [48.9, 3036.0], [49.0, 3036.0], [49.1, 3036.0], [49.2, 3036.0], [49.3, 3036.0], [49.4, 3038.0], [49.5, 3038.0], [49.6, 3038.0], [49.7, 3038.0], [49.8, 3038.0], [49.9, 3038.0], [50.0, 3050.0], [50.1, 3050.0], [50.2, 3050.0], [50.3, 3050.0], [50.4, 3050.0], [50.5, 3050.0], [50.6, 3050.0], [50.7, 3053.0], [50.8, 3053.0], [50.9, 3053.0], [51.0, 3053.0], [51.1, 3053.0], [51.2, 3053.0], [51.3, 3053.0], [51.4, 3060.0], [51.5, 3060.0], [51.6, 3060.0], [51.7, 3060.0], [51.8, 3060.0], [51.9, 3060.0], [52.0, 3064.0], [52.1, 3064.0], [52.2, 3064.0], [52.3, 3064.0], [52.4, 3064.0], [52.5, 3064.0], [52.6, 3064.0], [52.7, 3073.0], [52.8, 3073.0], [52.9, 3073.0], [53.0, 3073.0], [53.1, 3073.0], [53.2, 3073.0], [53.3, 3077.0], [53.4, 3077.0], [53.5, 3077.0], [53.6, 3077.0], [53.7, 3077.0], [53.8, 3077.0], [53.9, 3077.0], [54.0, 3077.0], [54.1, 3077.0], [54.2, 3077.0], [54.3, 3077.0], [54.4, 3077.0], [54.5, 3077.0], [54.6, 3077.0], [54.7, 3085.0], [54.8, 3085.0], [54.9, 3085.0], [55.0, 3085.0], [55.1, 3085.0], [55.2, 3085.0], [55.3, 3094.0], [55.4, 3094.0], [55.5, 3094.0], [55.6, 3094.0], [55.7, 3094.0], [55.8, 3094.0], [55.9, 3094.0], [56.0, 3095.0], [56.1, 3095.0], [56.2, 3095.0], [56.3, 3095.0], [56.4, 3095.0], [56.5, 3095.0], [56.6, 3095.0], [56.7, 3095.0], [56.8, 3095.0], [56.9, 3095.0], [57.0, 3095.0], [57.1, 3095.0], [57.2, 3095.0], [57.3, 3099.0], [57.4, 3099.0], [57.5, 3099.0], [57.6, 3099.0], [57.7, 3099.0], [57.8, 3099.0], [57.9, 3111.0], [58.0, 3111.0], [58.1, 3111.0], [58.2, 3111.0], [58.3, 3111.0], [58.4, 3111.0], [58.5, 3111.0], [58.6, 3117.0], [58.7, 3117.0], [58.8, 3117.0], [58.9, 3117.0], [59.0, 3117.0], [59.1, 3117.0], [59.2, 3117.0], [59.3, 3119.0], [59.4, 3119.0], [59.5, 3119.0], [59.6, 3119.0], [59.7, 3119.0], [59.8, 3119.0], [59.9, 3129.0], [60.0, 3129.0], [60.1, 3129.0], [60.2, 3129.0], [60.3, 3129.0], [60.4, 3129.0], [60.5, 3129.0], [60.6, 3130.0], [60.7, 3130.0], [60.8, 3130.0], [60.9, 3130.0], [61.0, 3130.0], [61.1, 3130.0], [61.2, 3130.0], [61.3, 3130.0], [61.4, 3130.0], [61.5, 3130.0], [61.6, 3130.0], [61.7, 3130.0], [61.8, 3130.0], [61.9, 3140.0], [62.0, 3140.0], [62.1, 3140.0], [62.2, 3140.0], [62.3, 3140.0], [62.4, 3140.0], [62.5, 3149.0], [62.6, 3149.0], [62.7, 3149.0], [62.8, 3149.0], [62.9, 3149.0], [63.0, 3149.0], [63.1, 3149.0], [63.2, 3149.0], [63.3, 3149.0], [63.4, 3149.0], [63.5, 3149.0], [63.6, 3149.0], [63.7, 3149.0], [63.8, 3149.0], [63.9, 3164.0], [64.0, 3164.0], [64.1, 3164.0], [64.2, 3164.0], [64.3, 3164.0], [64.4, 3164.0], [64.5, 3182.0], [64.6, 3182.0], [64.7, 3182.0], [64.8, 3182.0], [64.9, 3182.0], [65.0, 3182.0], [65.1, 3182.0], [65.2, 3185.0], [65.3, 3185.0], [65.4, 3185.0], [65.5, 3185.0], [65.6, 3185.0], [65.7, 3185.0], [65.8, 3188.0], [65.9, 3188.0], [66.0, 3188.0], [66.1, 3188.0], [66.2, 3188.0], [66.3, 3188.0], [66.4, 3188.0], [66.5, 3189.0], [66.6, 3189.0], [66.7, 3189.0], [66.8, 3189.0], [66.9, 3189.0], [67.0, 3189.0], [67.1, 3189.0], [67.2, 3189.0], [67.3, 3189.0], [67.4, 3189.0], [67.5, 3189.0], [67.6, 3189.0], [67.7, 3189.0], [67.8, 3193.0], [67.9, 3193.0], [68.0, 3193.0], [68.1, 3193.0], [68.2, 3193.0], [68.3, 3193.0], [68.4, 3193.0], [68.5, 3194.0], [68.6, 3194.0], [68.7, 3194.0], [68.8, 3194.0], [68.9, 3194.0], [69.0, 3194.0], [69.1, 3194.0], [69.2, 3194.0], [69.3, 3194.0], [69.4, 3194.0], [69.5, 3194.0], [69.6, 3194.0], [69.7, 3194.0], [69.8, 3195.0], [69.9, 3195.0], [70.0, 3195.0], [70.1, 3195.0], [70.2, 3195.0], [70.3, 3195.0], [70.4, 3222.0], [70.5, 3222.0], [70.6, 3222.0], [70.7, 3222.0], [70.8, 3222.0], [70.9, 3222.0], [71.0, 3222.0], [71.1, 3224.0], [71.2, 3224.0], [71.3, 3224.0], [71.4, 3224.0], [71.5, 3224.0], [71.6, 3224.0], [71.7, 3224.0], [71.8, 3232.0], [71.9, 3232.0], [72.0, 3232.0], [72.1, 3232.0], [72.2, 3232.0], [72.3, 3232.0], [72.4, 3237.0], [72.5, 3237.0], [72.6, 3237.0], [72.7, 3237.0], [72.8, 3237.0], [72.9, 3237.0], [73.0, 3237.0], [73.1, 3239.0], [73.2, 3239.0], [73.3, 3239.0], [73.4, 3239.0], [73.5, 3239.0], [73.6, 3239.0], [73.7, 3242.0], [73.8, 3242.0], [73.9, 3242.0], [74.0, 3242.0], [74.1, 3242.0], [74.2, 3242.0], [74.3, 3242.0], [74.4, 3252.0], [74.5, 3252.0], [74.6, 3252.0], [74.7, 3252.0], [74.8, 3252.0], [74.9, 3252.0], [75.0, 3257.0], [75.1, 3257.0], [75.2, 3257.0], [75.3, 3257.0], [75.4, 3257.0], [75.5, 3257.0], [75.6, 3257.0], [75.7, 3259.0], [75.8, 3259.0], [75.9, 3259.0], [76.0, 3259.0], [76.1, 3259.0], [76.2, 3259.0], [76.3, 3259.0], [76.4, 3264.0], [76.5, 3264.0], [76.6, 3264.0], [76.7, 3264.0], [76.8, 3264.0], [76.9, 3264.0], [77.0, 3281.0], [77.1, 3281.0], [77.2, 3281.0], [77.3, 3281.0], [77.4, 3281.0], [77.5, 3281.0], [77.6, 3281.0], [77.7, 3282.0], [77.8, 3282.0], [77.9, 3282.0], [78.0, 3282.0], [78.1, 3282.0], [78.2, 3282.0], [78.3, 3299.0], [78.4, 3299.0], [78.5, 3299.0], [78.6, 3299.0], [78.7, 3299.0], [78.8, 3299.0], [78.9, 3299.0], [79.0, 3307.0], [79.1, 3307.0], [79.2, 3307.0], [79.3, 3307.0], [79.4, 3307.0], [79.5, 3307.0], [79.6, 3307.0], [79.7, 3341.0], [79.8, 3341.0], [79.9, 3341.0], [80.0, 3341.0], [80.1, 3341.0], [80.2, 3341.0], [80.3, 3360.0], [80.4, 3360.0], [80.5, 3360.0], [80.6, 3360.0], [80.7, 3360.0], [80.8, 3360.0], [80.9, 3360.0], [81.0, 3370.0], [81.1, 3370.0], [81.2, 3370.0], [81.3, 3370.0], [81.4, 3370.0], [81.5, 3370.0], [81.6, 3391.0], [81.7, 3391.0], [81.8, 3391.0], [81.9, 3391.0], [82.0, 3391.0], [82.1, 3391.0], [82.2, 3391.0], [82.3, 3396.0], [82.4, 3396.0], [82.5, 3396.0], [82.6, 3396.0], [82.7, 3396.0], [82.8, 3396.0], [82.9, 3419.0], [83.0, 3419.0], [83.1, 3419.0], [83.2, 3419.0], [83.3, 3419.0], [83.4, 3419.0], [83.5, 3419.0], [83.6, 3462.0], [83.7, 3462.0], [83.8, 3462.0], [83.9, 3462.0], [84.0, 3462.0], [84.1, 3462.0], [84.2, 3462.0], [84.3, 3483.0], [84.4, 3483.0], [84.5, 3483.0], [84.6, 3483.0], [84.7, 3483.0], [84.8, 3483.0], [84.9, 3486.0], [85.0, 3486.0], [85.1, 3486.0], [85.2, 3486.0], [85.3, 3486.0], [85.4, 3486.0], [85.5, 3486.0], [85.6, 3494.0], [85.7, 3494.0], [85.8, 3494.0], [85.9, 3494.0], [86.0, 3494.0], [86.1, 3494.0], [86.2, 3500.0], [86.3, 3500.0], [86.4, 3500.0], [86.5, 3500.0], [86.6, 3500.0], [86.7, 3500.0], [86.8, 3500.0], [86.9, 3514.0], [87.0, 3514.0], [87.1, 3514.0], [87.2, 3514.0], [87.3, 3514.0], [87.4, 3514.0], [87.5, 3514.0], [87.6, 3629.0], [87.7, 3629.0], [87.8, 3629.0], [87.9, 3629.0], [88.0, 3629.0], [88.1, 3629.0], [88.2, 3634.0], [88.3, 3634.0], [88.4, 3634.0], [88.5, 3634.0], [88.6, 3634.0], [88.7, 3634.0], [88.8, 3634.0], [88.9, 3640.0], [89.0, 3640.0], [89.1, 3640.0], [89.2, 3640.0], [89.3, 3640.0], [89.4, 3640.0], [89.5, 3683.0], [89.6, 3683.0], [89.7, 3683.0], [89.8, 3683.0], [89.9, 3683.0], [90.0, 3683.0], [90.1, 3683.0], [90.2, 3776.0], [90.3, 3776.0], [90.4, 3776.0], [90.5, 3776.0], [90.6, 3776.0], [90.7, 3776.0], [90.8, 3969.0], [90.9, 3969.0], [91.0, 3969.0], [91.1, 3969.0], [91.2, 3969.0], [91.3, 3969.0], [91.4, 3969.0], [91.5, 4278.0], [91.6, 4278.0], [91.7, 4278.0], [91.8, 4278.0], [91.9, 4278.0], [92.0, 4278.0], [92.1, 4278.0], [92.2, 4372.0], [92.3, 4372.0], [92.4, 4372.0], [92.5, 4372.0], [92.6, 4372.0], [92.7, 4372.0], [92.8, 4390.0], [92.9, 4390.0], [93.0, 4390.0], [93.1, 4390.0], [93.2, 4390.0], [93.3, 4390.0], [93.4, 4390.0], [93.5, 4415.0], [93.6, 4415.0], [93.7, 4415.0], [93.8, 4415.0], [93.9, 4415.0], [94.0, 4415.0], [94.1, 4469.0], [94.2, 4469.0], [94.3, 4469.0], [94.4, 4469.0], [94.5, 4469.0], [94.6, 4469.0], [94.7, 4469.0], [94.8, 4519.0], [94.9, 4519.0], [95.0, 4519.0], [95.1, 4519.0], [95.2, 4519.0], [95.3, 4519.0], [95.4, 4673.0], [95.5, 4673.0], [95.6, 4673.0], [95.7, 4673.0], [95.8, 4673.0], [95.9, 4673.0], [96.0, 4673.0], [96.1, 4682.0], [96.2, 4682.0], [96.3, 4682.0], [96.4, 4682.0], [96.5, 4682.0], [96.6, 4682.0], [96.7, 4682.0], [96.8, 4787.0], [96.9, 4787.0], [97.0, 4787.0], [97.1, 4787.0], [97.2, 4787.0], [97.3, 4787.0], [97.4, 4933.0], [97.5, 4933.0], [97.6, 4933.0], [97.7, 4933.0], [97.8, 4933.0], [97.9, 4933.0], [98.0, 4933.0], [98.1, 4938.0], [98.2, 4938.0], [98.3, 4938.0], [98.4, 4938.0], [98.5, 4938.0], [98.6, 4938.0], [98.7, 5220.0], [98.8, 5220.0], [98.9, 5220.0], [99.0, 5220.0], [99.1, 5220.0], [99.2, 5220.0], [99.3, 5220.0], [99.4, 7375.0], [99.5, 7375.0], [99.6, 7375.0], [99.7, 7375.0], [99.8, 7375.0], [99.9, 7375.0], [100.0, 7375.0]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 140.0, "series": [{"data": [[600.0, 4.0], [700.0, 30.0], [800.0, 4.0], [900.0, 11.0], [1000.0, 8.0], [1100.0, 3.0], [1200.0, 10.0], [1300.0, 1.0], [1400.0, 3.0], [1500.0, 11.0], [1600.0, 2.0], [1700.0, 4.0], [1800.0, 10.0], [1900.0, 15.0], [2000.0, 26.0], [2100.0, 24.0], [2300.0, 14.0], [2200.0, 19.0], [2400.0, 12.0], [2500.0, 11.0], [2600.0, 20.0], [2800.0, 9.0], [2700.0, 11.0], [2900.0, 12.0], [3000.0, 12.0], [3100.0, 9.0], [3200.0, 7.0], [3300.0, 12.0], [3400.0, 17.0], [3500.0, 9.0], [3600.0, 4.0], [3700.0, 5.0], [3800.0, 5.0], [3900.0, 7.0], [4000.0, 5.0], [4300.0, 4.0], [4200.0, 7.0], [4100.0, 6.0], [4400.0, 9.0], [4500.0, 3.0], [4600.0, 3.0], [4700.0, 6.0], [4800.0, 4.0], [5100.0, 5.0], [4900.0, 3.0], [5000.0, 3.0], [5200.0, 5.0], [5300.0, 2.0], [5400.0, 5.0], [5500.0, 5.0], [5600.0, 3.0], [5800.0, 1.0], [5700.0, 1.0], [5900.0, 5.0], [6000.0, 1.0], [6400.0, 1.0], [6900.0, 1.0], [100.0, 2.0], [200.0, 19.0], [300.0, 11.0], [400.0, 10.0], [500.0, 9.0]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[0.0, 95.0], [600.0, 4.0], [700.0, 1.0], [800.0, 2.0], [1000.0, 3.0], [1100.0, 1.0], [1200.0, 2.0], [1600.0, 1.0], [1800.0, 6.0], [1900.0, 4.0], [2000.0, 5.0], [2100.0, 5.0], [2200.0, 1.0], [2400.0, 7.0], [2500.0, 2.0], [2600.0, 1.0], [2700.0, 3.0], [2800.0, 1.0], [2900.0, 1.0], [3000.0, 5.0], [3700.0, 1.0], [3900.0, 1.0], [4200.0, 2.0], [4800.0, 3.0], [4700.0, 2.0], [4900.0, 2.0], [5000.0, 2.0], [5100.0, 2.0], [5200.0, 5.0], [5300.0, 8.0], [5400.0, 9.0], [5600.0, 6.0], [5500.0, 9.0], [5700.0, 10.0], [5800.0, 1.0], [5900.0, 8.0], [6000.0, 11.0], [6100.0, 7.0], [6200.0, 11.0], [6300.0, 3.0], [6400.0, 4.0], [6500.0, 4.0], [6600.0, 1.0], [6800.0, 2.0], [6700.0, 5.0], [7000.0, 3.0], [7300.0, 2.0], [7600.0, 1.0], [7500.0, 1.0], [7700.0, 2.0], [7900.0, 2.0], [7800.0, 3.0], [8100.0, 2.0], [8000.0, 2.0], [8400.0, 1.0], [8200.0, 1.0], [8700.0, 1.0], [9800.0, 1.0], [100.0, 140.0], [300.0, 26.0], [400.0, 38.0], [500.0, 5.0]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[1700.0, 1.0], [1800.0, 2.0], [1900.0, 4.0], [2000.0, 5.0], [2100.0, 3.0], [2200.0, 4.0], [2300.0, 10.0], [2400.0, 6.0], [2500.0, 4.0], [2600.0, 2.0], [2700.0, 4.0], [2800.0, 9.0], [2900.0, 12.0], [3000.0, 23.0], [3100.0, 19.0], [3200.0, 18.0], [3300.0, 12.0], [3400.0, 6.0], [3500.0, 1.0], [3800.0, 1.0], [4000.0, 1.0], [4800.0, 1.0], [4900.0, 2.0], [5000.0, 1.0], [5200.0, 1.0]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[0.0, 4.0], [900.0, 1.0], [1100.0, 1.0], [1300.0, 2.0], [100.0, 9.0], [1600.0, 1.0], [1700.0, 1.0], [1800.0, 4.0], [1900.0, 1.0], [2000.0, 2.0], [2300.0, 5.0], [2200.0, 3.0], [2400.0, 4.0], [2500.0, 3.0], [2600.0, 3.0], [2800.0, 6.0], [2700.0, 7.0], [2900.0, 12.0], [3000.0, 19.0], [3100.0, 19.0], [3200.0, 13.0], [3300.0, 6.0], [3400.0, 5.0], [3500.0, 2.0], [3600.0, 4.0], [3700.0, 1.0], [3900.0, 1.0], [4300.0, 2.0], [4200.0, 1.0], [4400.0, 2.0], [4600.0, 2.0], [4500.0, 1.0], [4700.0, 1.0], [4900.0, 2.0], [5200.0, 1.0], [7300.0, 1.0]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 9800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 9.0, "minX": 1.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 688.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 9.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 688.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 607.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 215.4378834355828, "minX": 1.64330268E12, "maxY": 215.4378834355828, "series": [{"data": [[1.64330268E12, 215.4378834355828]], "isOverall": false, "label": "CDI-J&J", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64330268E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 26.0, "minX": 1.0, "maxY": 9855.0, "series": [{"data": [[111.0, 6999.0], [122.0, 5529.0], [143.0, 4357.0], [142.0, 4592.166666666666], [141.0, 4774.0], [139.0, 5471.0], [136.0, 5230.0], [151.0, 3324.833333333333], [150.0, 3753.5], [148.0, 4169.0], [145.0, 4000.0], [144.0, 4235.0], [159.0, 2688.0], [156.0, 2686.0], [165.0, 5542.0], [163.0, 2251.0], [162.0, 5410.0], [161.0, 2607.5], [160.0, 3180.125], [174.0, 2911.0], [173.0, 3817.0], [168.0, 4430.857142857143], [183.0, 3320.0], [180.0, 2863.0], [179.0, 3852.75], [176.0, 5852.0], [199.0, 3959.0], [197.0, 2995.5], [196.0, 3445.1666666666665], [195.0, 2482.3333333333335], [207.0, 2572.5], [206.0, 5272.0], [202.0, 2427.6666666666665], [215.0, 4899.5], [213.0, 2108.0], [212.0, 2063.6], [211.0, 2269.428571428571], [218.0, 1926.0], [217.0, 2892.0], [216.0, 5479.0], [226.0, 2702.0], [224.0, 2272.0], [238.0, 5787.0], [236.0, 3541.8], [246.0, 3329.5], [244.0, 3230.0], [243.0, 3362.0], [242.0, 4175.5], [241.0, 3815.5], [255.0, 2160.0], [254.0, 2035.0], [253.0, 3961.0], [252.0, 2562.0], [251.0, 2825.0], [248.0, 5472.5], [270.0, 4866.0], [269.0, 2648.0], [271.0, 2156.0], [268.0, 2359.0], [266.0, 3472.75], [264.0, 3739.0], [261.0, 3066.166666666667], [258.0, 2141.0], [256.0, 4683.0], [284.0, 2103.0], [276.0, 3467.0], [279.0, 2962.6666666666665], [281.0, 3691.0], [285.0, 3218.8], [286.0, 1089.0], [278.0, 2125.0], [275.0, 2082.0], [274.0, 2870.5], [272.0, 2259.0], [291.0, 1149.0], [292.0, 2903.0], [289.0, 2938.6666666666665], [290.0, 1391.0], [293.0, 955.3333333333334], [294.0, 5481.0], [288.0, 2147.0], [297.0, 3896.0], [298.0, 3592.3333333333335], [300.0, 2305.6666666666665], [301.0, 2900.0], [302.0, 3081.5], [296.0, 2481.5], [299.0, 3399.8888888888887], [307.0, 3673.0], [311.0, 2954.714285714286], [308.0, 2635.0], [312.0, 2635.5], [314.0, 1725.5], [313.0, 2517.2857142857147], [304.0, 2197.0], [309.0, 2406.818181818182], [310.0, 3551.5], [315.0, 3046.0], [316.0, 2069.0], [317.0, 2470.25], [318.0, 2102.0], [319.0, 1225.0], [332.0, 323.0], [320.0, 4469.0], [322.0, 2189.0], [323.0, 3340.0], [324.0, 2298.777777777778], [325.0, 1482.25], [327.0, 312.5], [326.0, 4128.0], [346.0, 1596.0], [361.0, 1967.78431372549], [359.0, 1510.3023255813953], [360.0, 1847.6037735849056], [362.0, 1777.2631578947367], [363.0, 2233.0], [364.0, 270.5], [367.0, 3087.0], [373.0, 335.0], [375.0, 3540.0], [380.0, 910.0], [382.0, 2184.0], [385.0, 335.5], [386.0, 347.5], [387.0, 350.0]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[290.756, 2552.116000000002]], "isOverall": false, "label": "Login-page-Aggregated", "isController": false}, {"data": [[2.0, 7888.0], [3.0, 7579.0], [5.0, 6895.5], [6.0, 5269.0], [7.0, 8088.0], [8.0, 3944.0], [9.0, 9855.0], [11.0, 6068.5], [12.0, 7973.0], [15.0, 7157.333333333333], [16.0, 6783.0], [17.0, 8014.0], [19.0, 6617.0], [20.0, 7872.0], [21.0, 6223.0], [22.0, 5129.0], [23.0, 6573.0], [24.0, 5968.0], [26.0, 5791.5], [28.0, 7146.5], [29.0, 6418.0], [30.0, 7017.0], [31.0, 6594.0], [33.0, 6120.0], [32.0, 5719.0], [35.0, 7700.0], [34.0, 8296.0], [37.0, 8410.0], [36.0, 5213.0], [39.0, 5448.0], [38.0, 4799.0], [41.0, 3751.0], [40.0, 8114.0], [43.0, 6772.0], [42.0, 7716.0], [45.0, 5595.0], [44.0, 6071.0], [47.0, 6858.0], [46.0, 4862.0], [49.0, 5355.0], [48.0, 7355.0], [51.0, 4225.0], [50.0, 7083.0], [53.0, 5590.0], [52.0, 4775.0], [55.0, 6489.0], [54.0, 5477.0], [57.0, 6707.0], [56.0, 6751.0], [59.0, 6864.0], [58.0, 4805.0], [61.0, 7052.0], [60.0, 6657.0], [63.0, 6232.0], [62.0, 6592.0], [67.0, 6580.0], [66.0, 5159.0], [65.0, 4844.0], [64.0, 6377.0], [71.0, 5507.0], [70.0, 5412.0], [69.0, 5385.0], [75.0, 6248.0], [74.0, 6129.0], [73.0, 7384.0], [72.0, 6452.0], [79.0, 5974.0], [78.0, 6410.0], [77.0, 5737.0], [76.0, 5765.0], [83.0, 5972.0], [82.0, 6265.0], [81.0, 5927.0], [80.0, 6146.0], [87.0, 6251.0], [86.0, 6096.0], [85.0, 5952.0], [84.0, 6386.0], [91.0, 6135.5], [89.0, 5768.0], [88.0, 5846.0], [95.0, 6048.0], [94.0, 5781.0], [93.0, 6205.0], [92.0, 6013.0], [99.0, 5986.0], [98.0, 6105.0], [97.0, 6058.0], [96.0, 6254.0], [102.0, 6022.0], [101.0, 6052.0], [100.0, 6097.0], [107.0, 6242.0], [106.0, 6010.0], [105.0, 6195.0], [104.0, 6141.5], [111.0, 5959.0], [110.0, 5705.0], [109.0, 4918.0], [108.0, 6066.0], [115.0, 5681.0], [114.0, 5732.0], [113.0, 5717.0], [112.0, 5730.0], [119.0, 5542.0], [118.0, 5609.0], [117.0, 5630.0], [116.0, 5673.0], [123.0, 5551.0], [122.0, 5718.0], [121.0, 5537.0], [120.0, 6233.0], [127.0, 5519.0], [126.0, 5553.0], [125.0, 5440.0], [124.0, 5457.0], [135.0, 5331.0], [134.0, 5326.0], [133.0, 5302.0], [132.0, 5247.0], [131.0, 5410.0], [130.0, 5432.0], [129.0, 5451.0], [128.0, 5631.0], [143.0, 5002.0], [142.0, 4263.0], [141.0, 3057.0], [140.0, 3042.0], [139.0, 3038.0], [138.0, 5321.0], [136.0, 5363.0], [151.0, 2653.0], [150.0, 3016.0], [149.0, 2992.0], [148.0, 2792.0], [147.0, 2750.0], [146.0, 2872.0], [145.0, 2776.0], [144.0, 4957.0], [159.0, 36.0], [158.0, 2433.0], [157.0, 26.0], [156.0, 2424.0], [155.0, 2440.0], [154.0, 2448.0], [153.0, 2444.0], [152.0, 2445.0], [167.0, 1039.5], [165.0, 46.0], [163.0, 46.0], [162.0, 3092.0], [161.0, 2090.0], [160.0, 2442.0], [174.0, 1998.0], [173.0, 36.0], [172.0, 32.0], [170.0, 35.5], [168.0, 41.0], [183.0, 36.0], [180.0, 51.0], [179.0, 583.5], [176.0, 2003.0], [191.0, 2554.0], [190.0, 49.0], [189.0, 36.0], [187.0, 45.25], [199.0, 34.0], [198.0, 35.0], [197.0, 57.0], [196.0, 30.0], [195.0, 51.0], [207.0, 74.0], [206.0, 39.666666666666664], [203.0, 36.0], [202.0, 72.5], [200.0, 55.0], [212.0, 84.0], [211.0, 77.0], [210.0, 51.0], [221.0, 101.33333333333333], [218.0, 92.0], [216.0, 696.25], [231.0, 104.0], [230.0, 102.0], [229.0, 1156.0], [227.0, 105.0], [226.0, 102.0], [224.0, 733.6666666666666], [239.0, 2142.0], [238.0, 33.0], [236.0, 117.0], [235.0, 1124.0], [234.0, 103.5], [232.0, 108.0], [247.0, 2197.0], [246.0, 437.5], [244.0, 34.0], [243.0, 28.0], [242.0, 32.0], [241.0, 79.0], [255.0, 32.0], [254.0, 30.0], [253.0, 483.0], [252.0, 142.0], [251.0, 1448.6666666666667], [248.0, 46.0], [270.0, 251.66666666666666], [271.0, 282.0], [268.0, 505.0], [258.0, 71.66666666666667], [266.0, 57.0], [265.0, 50.0], [264.0, 2104.0], [263.0, 139.5], [261.0, 41.0], [260.0, 149.0], [285.0, 330.3333333333333], [284.0, 293.0], [283.0, 346.0], [282.0, 922.0], [281.0, 623.5714285714286], [280.0, 103.0], [279.0, 1274.0], [277.0, 286.5], [276.0, 127.0], [278.0, 138.0], [273.0, 400.75], [272.0, 66.0], [274.0, 127.0], [275.0, 1998.0], [287.0, 139.0], [286.0, 1865.0], [290.0, 349.25], [296.0, 182.0], [300.0, 399.0], [302.0, 136.5], [298.0, 1132.0], [297.0, 527.0], [295.0, 351.66666666666663], [292.0, 227.33333333333334], [288.0, 702.0], [289.0, 92.0], [293.0, 72.0], [294.0, 1917.0], [299.0, 1372.5], [318.0, 219.0], [313.0, 93.5], [310.0, 397.6666666666667], [309.0, 569.0], [308.0, 1655.0], [305.0, 391.4], [307.0, 83.0], [306.0, 97.0], [311.0, 355.75], [304.0, 108.5], [314.0, 308.3333333333333], [319.0, 282.6666666666667], [317.0, 174.66666666666669], [316.0, 372.0], [315.0, 388.5], [312.0, 303.6666666666667], [334.0, 182.0], [332.0, 166.8], [329.0, 175.0], [328.0, 175.75000000000003], [326.0, 546.6], [327.0, 114.0], [325.0, 146.2], [324.0, 54.0], [322.0, 58.666666666666664], [347.0, 167.20000000000002], [346.0, 166.0], [344.0, 171.33333333333334], [341.0, 180.0], [339.0, 171.75], [367.0, 140.33333333333334], [366.0, 142.33333333333334], [363.0, 142.0], [362.0, 148.0], [361.0, 156.0], [360.0, 141.5], [359.0, 142.0], [358.0, 154.0], [355.0, 148.0], [381.0, 138.0], [380.0, 140.0], [376.0, 140.0], [373.0, 140.0], [371.0, 144.14285714285714], [387.0, 135.83333333333331], [1.0, 5941.0]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[220.06599999999986, 2050.5620000000004]], "isOverall": false, "label": "Home-Aggregated", "isController": false}, {"data": [[2.0, 4995.0], [3.0, 3300.0], [5.0, 3183.5], [6.0, 2754.0], [7.0, 5011.0], [8.0, 3005.0], [9.0, 2480.0], [11.0, 3150.5], [12.0, 3453.0], [15.0, 3167.0], [16.0, 3149.0], [17.0, 3332.0], [19.0, 3165.0], [20.0, 3199.0], [21.0, 3028.0], [22.0, 2846.0], [23.0, 3266.0], [24.0, 3223.0], [26.0, 3046.0], [28.0, 4184.0], [29.0, 3166.0], [30.0, 3333.0], [31.0, 3132.0], [33.0, 3021.0], [32.0, 3007.0], [35.0, 3328.0], [34.0, 4810.0], [37.0, 4916.0], [36.0, 4073.0], [39.0, 3125.0], [38.0, 2950.0], [41.0, 2400.0], [40.0, 3181.0], [43.0, 3375.0], [42.0, 3301.0], [45.0, 3190.0], [44.0, 3314.0], [47.0, 3374.0], [46.0, 3010.0], [49.0, 3281.0], [48.0, 3840.0], [51.0, 2862.0], [50.0, 3306.0], [53.0, 3220.0], [52.0, 3097.0], [55.0, 3295.0], [54.0, 3166.0], [57.0, 3408.0], [56.0, 3120.0], [59.0, 3224.0], [58.0, 3080.0], [61.0, 3083.0], [60.0, 3398.0], [63.0, 3257.0], [62.0, 3428.0], [67.0, 3238.0], [66.0, 3159.0], [65.0, 2994.0], [64.0, 3247.0], [71.0, 3200.0], [70.0, 3408.0], [69.0, 3321.5], [75.0, 3098.0], [74.0, 3166.0], [73.0, 2597.0], [72.0, 3061.0], [79.0, 3407.0], [78.0, 3040.0], [77.0, 3255.0], [76.0, 3250.0], [83.0, 3279.0], [82.0, 3187.0], [81.0, 3180.0], [80.0, 3096.0], [87.0, 3065.0], [86.0, 3071.0], [85.0, 3104.0], [84.0, 3162.0], [91.0, 3069.5], [89.0, 2991.0], [88.0, 3081.0], [95.0, 3101.0], [94.0, 3044.0], [93.0, 2923.0], [92.0, 3139.0], [99.0, 3001.0], [98.0, 3052.0], [97.0, 2908.0], [96.0, 2834.0], [102.0, 2927.0], [101.0, 3016.0], [100.0, 2967.0], [107.0, 3053.0], [106.0, 2889.0], [105.0, 3001.0], [104.0, 2879.5], [111.0, 2895.0], [110.0, 2740.0], [108.0, 2826.0], [115.0, 2689.0], [114.0, 2707.0], [113.0, 2818.0], [112.0, 2908.0], [119.0, 2607.0], [118.0, 2593.0], [117.0, 2594.0], [116.0, 2588.0], [123.0, 2356.0], [122.0, 2358.0], [121.0, 2355.0], [120.0, 3272.0], [127.0, 2330.0], [126.0, 2330.0], [125.0, 2182.0], [124.0, 2340.0], [135.0, 2066.0], [134.0, 2353.0], [133.0, 2291.0], [132.0, 2251.0], [131.0, 2314.0], [130.0, 2337.0], [129.0, 2377.0], [128.0, 2442.0], [143.0, 1963.0], [138.0, 2200.0], [136.0, 2222.0], [144.0, 1973.0], [158.0, 2406.0], [160.0, 2415.0], [179.0, 2101.0], [216.0, 2412.0], [229.0, 2098.0], [224.0, 1890.0], [239.0, 2023.0], [247.0, 2074.0], [251.0, 1976.0], [264.0, 1961.0], [286.0, 1725.0], [275.0, 1870.0], [1.0, 2979.0]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[83.94736842105264, 2961.75]], "isOverall": false, "label": "Home-0-Aggregated", "isController": false}, {"data": [[2.0, 2892.0], [3.0, 4278.0], [5.0, 3711.0], [6.0, 2515.0], [7.0, 3077.0], [8.0, 939.0], [9.0, 7375.0], [11.0, 2918.0], [12.0, 4519.0], [15.0, 3989.6666666666665], [16.0, 3634.0], [17.0, 4682.0], [19.0, 3452.0], [20.0, 4673.0], [21.0, 3194.0], [22.0, 2283.0], [23.0, 3307.0], [24.0, 2745.0], [26.0, 2745.0], [28.0, 2962.5], [29.0, 3252.0], [30.0, 3683.0], [31.0, 3462.0], [33.0, 3099.0], [32.0, 2712.0], [35.0, 4372.0], [34.0, 3486.0], [37.0, 3494.0], [36.0, 1140.0], [39.0, 2322.0], [38.0, 1848.0], [41.0, 1350.0], [40.0, 4933.0], [43.0, 3396.0], [42.0, 4415.0], [45.0, 2405.0], [44.0, 2757.0], [47.0, 3483.0], [46.0, 1851.0], [49.0, 2073.0], [48.0, 3514.0], [51.0, 1363.0], [50.0, 3776.0], [53.0, 2370.0], [52.0, 1678.0], [55.0, 3194.0], [54.0, 2311.0], [57.0, 3299.0], [56.0, 3629.0], [59.0, 3640.0], [58.0, 1724.0], [61.0, 3969.0], [60.0, 3259.0], [63.0, 2974.0], [62.0, 3164.0], [67.0, 3341.0], [66.0, 1999.0], [65.0, 1850.0], [64.0, 3130.0], [71.0, 2307.0], [70.0, 2004.0], [69.0, 2062.5], [75.0, 3149.0], [74.0, 2962.0], [73.0, 4787.0], [72.0, 3391.0], [79.0, 2567.0], [78.0, 3370.0], [77.0, 2482.0], [76.0, 2514.0], [83.0, 2692.0], [82.0, 3077.0], [81.0, 2746.0], [80.0, 3050.0], [87.0, 3185.0], [86.0, 3024.0], [85.0, 2848.0], [84.0, 3224.0], [91.0, 3065.0], [89.0, 2777.0], [88.0, 2764.0], [95.0, 2947.0], [94.0, 2737.0], [93.0, 3282.0], [92.0, 2874.0], [99.0, 2985.0], [98.0, 3053.0], [97.0, 3149.0], [96.0, 3419.0], [102.0, 3094.0], [101.0, 3036.0], [100.0, 3130.0], [107.0, 3189.0], [106.0, 3119.0], [105.0, 3193.0], [104.0, 3261.5], [111.0, 3064.0], [110.0, 2964.0], [108.0, 3239.0], [115.0, 2991.0], [114.0, 3024.0], [113.0, 2898.0], [112.0, 2822.0], [119.0, 2934.0], [118.0, 3016.0], [117.0, 3036.0], [116.0, 3085.0], [123.0, 3195.0], [122.0, 3360.0], [121.0, 3182.0], [120.0, 2960.0], [127.0, 3189.0], [126.0, 3222.0], [125.0, 3257.0], [124.0, 3117.0], [135.0, 3264.0], [134.0, 2972.0], [133.0, 3010.0], [132.0, 2996.0], [131.0, 3095.0], [130.0, 3095.0], [129.0, 3073.0], [128.0, 3188.0], [143.0, 3038.0], [138.0, 3120.0], [136.0, 3140.0], [144.0, 2981.0], [158.0, 27.0], [160.0, 27.0], [179.0, 63.0], [216.0, 94.0], [229.0, 107.0], [224.0, 101.0], [239.0, 119.0], [247.0, 122.0], [251.0, 128.5], [264.0, 142.0], [286.0, 138.0], [275.0, 128.0], [1.0, 2961.0]], "isOverall": false, "label": "Home-1", "isController": false}, {"data": [[83.94736842105264, 2823.7763157894724]], "isOverall": false, "label": "Home-1-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 387.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 11388.466666666667, "minX": 1.64330268E12, "maxY": 619452.6833333333, "series": [{"data": [[1.64330268E12, 619452.6833333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.64330268E12, 11388.466666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64330268E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2050.5620000000004, "minX": 1.64330268E12, "maxY": 2961.75, "series": [{"data": [[1.64330268E12, 2552.116000000002]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[1.64330268E12, 2050.5620000000004]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[1.64330268E12, 2961.75]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[1.64330268E12, 2823.7763157894724]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64330268E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1185.0499999999997, "minX": 1.64330268E12, "maxY": 2961.6907894736846, "series": [{"data": [[1.64330268E12, 2406.8300000000004]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[1.64330268E12, 1185.0499999999997]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[1.64330268E12, 2961.6907894736846]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[1.64330268E12, 2231.499999999998]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64330268E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.64330268E12, "maxY": 1396.325999999999, "series": [{"data": [[1.64330268E12, 1396.325999999999]], "isOverall": false, "label": "Login-page", "isController": false}, {"data": [[1.64330268E12, 0.0]], "isOverall": false, "label": "Home", "isController": false}, {"data": [[1.64330268E12, 0.0]], "isOverall": false, "label": "Home-0", "isController": false}, {"data": [[1.64330268E12, 0.0]], "isOverall": false, "label": "Home-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64330268E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 908.0, "minX": 1.64330268E12, "maxY": 9855.0, "series": [{"data": [[1.64330268E12, 9855.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.64330268E12, 6048.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.64330268E12, 8088.5199999999995]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.64330268E12, 6581.200000000001]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.64330268E12, 908.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.64330268E12, 3239.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64330268E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 52.5, "minX": 34.0, "maxY": 5110.5, "series": [{"data": [[64.0, 3328.0], [138.0, 2906.0], [34.0, 5110.5], [290.0, 2652.5], [36.0, 4021.0], [81.0, 3019.5], [356.0, 2749.0], [48.0, 2997.5], [51.0, 3231.0], [62.0, 3266.0], [63.0, 4673.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[138.0, 148.0], [290.0, 127.0], [81.0, 52.5], [356.0, 488.0], [48.0, 2771.0], [51.0, 3042.0], [62.0, 4918.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 356.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 51.0, "minX": 34.0, "maxY": 4784.0, "series": [{"data": [[64.0, 2976.5], [138.0, 2804.0], [34.0, 2953.5], [290.0, 2388.0], [36.0, 2919.0], [81.0, 2822.5], [356.0, 2586.0], [48.0, 2997.0], [51.0, 3184.0], [62.0, 2953.0], [63.0, 2846.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[138.0, 148.0], [290.0, 127.0], [81.0, 51.0], [356.0, 487.5], [48.0, 2702.0], [51.0, 2970.0], [62.0, 4784.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 356.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 21.733333333333334, "minX": 1.64330268E12, "maxY": 21.733333333333334, "series": [{"data": [[1.64330268E12, 21.733333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64330268E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.5166666666666667, "minX": 1.64330268E12, "maxY": 9.6, "series": [{"data": [[1.64330268E12, 9.083333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.64330268E12, 2.533333333333333]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.64330268E12, 9.6]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.64330268E12, 0.5166666666666667]], "isOverall": false, "label": "419", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64330268E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.21666666666666667, "minX": 1.64330268E12, "maxY": 6.016666666666667, "series": [{"data": [[1.64330268E12, 0.21666666666666667]], "isOverall": false, "label": "Home-1-failure", "isController": false}, {"data": [[1.64330268E12, 2.316666666666667]], "isOverall": false, "label": "Home-1-success", "isController": false}, {"data": [[1.64330268E12, 3.8833333333333333]], "isOverall": false, "label": "Login-page-failure", "isController": false}, {"data": [[1.64330268E12, 4.45]], "isOverall": false, "label": "Login-page-success", "isController": false}, {"data": [[1.64330268E12, 6.016666666666667]], "isOverall": false, "label": "Home-failure", "isController": false}, {"data": [[1.64330268E12, 2.316666666666667]], "isOverall": false, "label": "Home-success", "isController": false}, {"data": [[1.64330268E12, 2.533333333333333]], "isOverall": false, "label": "Home-0-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64330268E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 10.116666666666667, "minX": 1.64330268E12, "maxY": 11.616666666666667, "series": [{"data": [[1.64330268E12, 11.616666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.64330268E12, 10.116666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64330268E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

